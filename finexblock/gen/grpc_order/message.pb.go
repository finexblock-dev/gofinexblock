// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.3
// source: proto/grpc_order/message.proto

package grpc_order

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrderType int32

const (
	OrderType_ORDER_NIL OrderType = 0
	OrderType_BID       OrderType = 1 // 구매 매수
	OrderType_ASK       OrderType = 2 // 판매 매도
)

// Enum value maps for OrderType.
var (
	OrderType_name = map[int32]string{
		0: "ORDER_NIL",
		1: "BID",
		2: "ASK",
	}
	OrderType_value = map[string]int32{
		"ORDER_NIL": 0,
		"BID":       1,
		"ASK":       2,
	}
)

func (x OrderType) Enum() *OrderType {
	p := new(OrderType)
	*p = x
	return p
}

func (x OrderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_grpc_order_message_proto_enumTypes[0].Descriptor()
}

func (OrderType) Type() protoreflect.EnumType {
	return &file_proto_grpc_order_message_proto_enumTypes[0]
}

func (x OrderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderType.Descriptor instead.
func (OrderType) EnumDescriptor() ([]byte, []int) {
	return file_proto_grpc_order_message_proto_rawDescGZIP(), []int{0}
}

type Priority int32

const (
	Priority_PRIORITY_NIL Priority = 0
	Priority_LOW          Priority = 1
	Priority_MEDIUM       Priority = 2
	Priority_HIGH         Priority = 3
)

// Enum value maps for Priority.
var (
	Priority_name = map[int32]string{
		0: "PRIORITY_NIL",
		1: "LOW",
		2: "MEDIUM",
		3: "HIGH",
	}
	Priority_value = map[string]int32{
		"PRIORITY_NIL": 0,
		"LOW":          1,
		"MEDIUM":       2,
		"HIGH":         3,
	}
)

func (x Priority) Enum() *Priority {
	p := new(Priority)
	*p = x
	return p
}

func (x Priority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Priority) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_grpc_order_message_proto_enumTypes[1].Descriptor()
}

func (Priority) Type() protoreflect.EnumType {
	return &file_proto_grpc_order_message_proto_enumTypes[1]
}

func (x Priority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Priority.Descriptor instead.
func (Priority) EnumDescriptor() ([]byte, []int) {
	return file_proto_grpc_order_message_proto_rawDescGZIP(), []int{1}
}

type SymbolType int32

const (
	SymbolType_SYMBOL_NIL SymbolType = 0
	SymbolType_BTCETH     SymbolType = 1
	SymbolType_BTCETC     SymbolType = 2
	SymbolType_BTCMATIC   SymbolType = 3
	SymbolType_BTCLPT     SymbolType = 4
	SymbolType_BTCMANA    SymbolType = 5
	SymbolType_BTCAXS     SymbolType = 6
	SymbolType_BTCAUDIO   SymbolType = 7
	SymbolType_BTCSAND    SymbolType = 8
	SymbolType_BTCCOMP    SymbolType = 9
	SymbolType_BTCLINK    SymbolType = 10
	SymbolType_BTCDYDX    SymbolType = 11
	SymbolType_BTCBNB     SymbolType = 12
	SymbolType_BTCOP      SymbolType = 13
	SymbolType_BTCAVAX    SymbolType = 14
	SymbolType_BTCARB     SymbolType = 15
)

// Enum value maps for SymbolType.
var (
	SymbolType_name = map[int32]string{
		0:  "SYMBOL_NIL",
		1:  "BTCETH",
		2:  "BTCETC",
		3:  "BTCMATIC",
		4:  "BTCLPT",
		5:  "BTCMANA",
		6:  "BTCAXS",
		7:  "BTCAUDIO",
		8:  "BTCSAND",
		9:  "BTCCOMP",
		10: "BTCLINK",
		11: "BTCDYDX",
		12: "BTCBNB",
		13: "BTCOP",
		14: "BTCAVAX",
		15: "BTCARB",
	}
	SymbolType_value = map[string]int32{
		"SYMBOL_NIL": 0,
		"BTCETH":     1,
		"BTCETC":     2,
		"BTCMATIC":   3,
		"BTCLPT":     4,
		"BTCMANA":    5,
		"BTCAXS":     6,
		"BTCAUDIO":   7,
		"BTCSAND":    8,
		"BTCCOMP":    9,
		"BTCLINK":    10,
		"BTCDYDX":    11,
		"BTCBNB":     12,
		"BTCOP":      13,
		"BTCAVAX":    14,
		"BTCARB":     15,
	}
)

func (x SymbolType) Enum() *SymbolType {
	p := new(SymbolType)
	*p = x
	return p
}

func (x SymbolType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SymbolType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_grpc_order_message_proto_enumTypes[2].Descriptor()
}

func (SymbolType) Type() protoreflect.EnumType {
	return &file_proto_grpc_order_message_proto_enumTypes[2]
}

func (x SymbolType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SymbolType.Descriptor instead.
func (SymbolType) EnumDescriptor() ([]byte, []int) {
	return file_proto_grpc_order_message_proto_rawDescGZIP(), []int{2}
}

type Currency int32

const (
	Currency_CURRENCY_NIL Currency = 0
	Currency_ETH          Currency = 1
	Currency_ETC          Currency = 2
	Currency_MATIC        Currency = 3
	Currency_LPT          Currency = 4
	Currency_MANA         Currency = 5
	Currency_AXS          Currency = 6
	Currency_AUDIO        Currency = 7
	Currency_SAND         Currency = 8
	Currency_COMP         Currency = 9
	Currency_LINK         Currency = 10
	Currency_DYDX         Currency = 11
	Currency_BNB          Currency = 12
	Currency_OP           Currency = 13
	Currency_AVAX         Currency = 14
	Currency_ARB          Currency = 15
	Currency_BTC          Currency = 16
)

// Enum value maps for Currency.
var (
	Currency_name = map[int32]string{
		0:  "CURRENCY_NIL",
		1:  "ETH",
		2:  "ETC",
		3:  "MATIC",
		4:  "LPT",
		5:  "MANA",
		6:  "AXS",
		7:  "AUDIO",
		8:  "SAND",
		9:  "COMP",
		10: "LINK",
		11: "DYDX",
		12: "BNB",
		13: "OP",
		14: "AVAX",
		15: "ARB",
		16: "BTC",
	}
	Currency_value = map[string]int32{
		"CURRENCY_NIL": 0,
		"ETH":          1,
		"ETC":          2,
		"MATIC":        3,
		"LPT":          4,
		"MANA":         5,
		"AXS":          6,
		"AUDIO":        7,
		"SAND":         8,
		"COMP":         9,
		"LINK":         10,
		"DYDX":         11,
		"BNB":          12,
		"OP":           13,
		"AVAX":         14,
		"ARB":          15,
		"BTC":          16,
	}
)

func (x Currency) Enum() *Currency {
	p := new(Currency)
	*p = x
	return p
}

func (x Currency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Currency) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_grpc_order_message_proto_enumTypes[3].Descriptor()
}

func (Currency) Type() protoreflect.EnumType {
	return &file_proto_grpc_order_message_proto_enumTypes[3]
}

func (x Currency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Currency.Descriptor instead.
func (Currency) EnumDescriptor() ([]byte, []int) {
	return file_proto_grpc_order_message_proto_rawDescGZIP(), []int{3}
}

type Reason int32

const (
	Reason_ADVANCE_PAYMENT Reason = 0
	Reason_DEPOSIT         Reason = 1
	Reason_WITHDRAWAL      Reason = 2
	Reason_MAKE            Reason = 3
	Reason_TAKE            Reason = 4
	Reason_REFUND          Reason = 5
)

// Enum value maps for Reason.
var (
	Reason_name = map[int32]string{
		0: "ADVANCE_PAYMENT",
		1: "DEPOSIT",
		2: "WITHDRAWAL",
		3: "MAKE",
		4: "TAKE",
		5: "REFUND",
	}
	Reason_value = map[string]int32{
		"ADVANCE_PAYMENT": 0,
		"DEPOSIT":         1,
		"WITHDRAWAL":      2,
		"MAKE":            3,
		"TAKE":            4,
		"REFUND":          5,
	}
)

func (x Reason) Enum() *Reason {
	p := new(Reason)
	*p = x
	return p
}

func (x Reason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Reason) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_grpc_order_message_proto_enumTypes[4].Descriptor()
}

func (Reason) Type() protoreflect.EnumType {
	return &file_proto_grpc_order_message_proto_enumTypes[4]
}

func (x Reason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Reason.Descriptor instead.
func (Reason) EnumDescriptor() ([]byte, []int) {
	return file_proto_grpc_order_message_proto_rawDescGZIP(), []int{4}
}

type Fee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount float64 `protobuf:"fixed64,1,opt,name=Amount,proto3" json:"Amount,omitempty"`
}

func (x *Fee) Reset() {
	*x = Fee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_grpc_order_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fee) ProtoMessage() {}

func (x *Fee) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_order_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fee.ProtoReflect.Descriptor instead.
func (*Fee) Descriptor() ([]byte, []int) {
	return file_proto_grpc_order_message_proto_rawDescGZIP(), []int{0}
}

func (x *Fee) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type Ack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=Success,json=success,proto3" json:"Success,omitempty"`
}

func (x *Ack) Reset() {
	*x = Ack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_grpc_order_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ack) ProtoMessage() {}

func (x *Ack) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_order_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ack.ProtoReflect.Descriptor instead.
func (*Ack) Descriptor() ([]byte, []int) {
	return file_proto_grpc_order_message_proto_rawDescGZIP(), []int{1}
}

func (x *Ack) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUUID  string                 `protobuf:"bytes,1,opt,name=UserUUID,json=user_uuid,proto3" json:"UserUUID,omitempty"`
	OrderUUID string                 `protobuf:"bytes,2,opt,name=OrderUUID,json=order_uuid,proto3" json:"OrderUUID,omitempty"`
	Quantity  float64                `protobuf:"fixed64,3,opt,name=Quantity,json=quantity,proto3" json:"Quantity,omitempty"`
	UnitPrice float64                `protobuf:"fixed64,4,opt,name=UnitPrice,json=unit_price,proto3" json:"UnitPrice,omitempty"`
	OrderType OrderType              `protobuf:"varint,5,opt,name=OrderType,json=order_type,proto3,enum=grpc_order.OrderType" json:"OrderType,omitempty"`
	Symbol    SymbolType             `protobuf:"varint,6,opt,name=Symbol,json=symbol,proto3,enum=grpc_order.SymbolType" json:"Symbol,omitempty"`
	MakeTime  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=MakeTime,json=make_time,proto3" json:"MakeTime,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_grpc_order_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_order_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_proto_grpc_order_message_proto_rawDescGZIP(), []int{2}
}

func (x *Order) GetUserUUID() string {
	if x != nil {
		return x.UserUUID
	}
	return ""
}

func (x *Order) GetOrderUUID() string {
	if x != nil {
		return x.OrderUUID
	}
	return ""
}

func (x *Order) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Order) GetUnitPrice() float64 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

func (x *Order) GetOrderType() OrderType {
	if x != nil {
		return x.OrderType
	}
	return OrderType_ORDER_NIL
}

func (x *Order) GetSymbol() SymbolType {
	if x != nil {
		return x.Symbol
	}
	return SymbolType_SYMBOL_NIL
}

func (x *Order) GetMakeTime() *timestamppb.Timestamp {
	if x != nil {
		return x.MakeTime
	}
	return nil
}

type OrderCancellation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUUID  string `protobuf:"bytes,1,opt,name=UserUUID,json=user_uuid,proto3" json:"UserUUID,omitempty"`
	OrderUUID string `protobuf:"bytes,2,opt,name=OrderUUID,json=order_uuid,proto3" json:"OrderUUID,omitempty"`
}

func (x *OrderCancellation) Reset() {
	*x = OrderCancellation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_grpc_order_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCancellation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCancellation) ProtoMessage() {}

func (x *OrderCancellation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_order_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCancellation.ProtoReflect.Descriptor instead.
func (*OrderCancellation) Descriptor() ([]byte, []int) {
	return file_proto_grpc_order_message_proto_rawDescGZIP(), []int{3}
}

func (x *OrderCancellation) GetUserUUID() string {
	if x != nil {
		return x.UserUUID
	}
	return ""
}

func (x *OrderCancellation) GetOrderUUID() string {
	if x != nil {
		return x.OrderUUID
	}
	return ""
}

type OrderCancelled struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUUID  string     `protobuf:"bytes,1,opt,name=UserUUID,json=user_uuid,proto3" json:"UserUUID,omitempty"`
	OrderUUID string     `protobuf:"bytes,2,opt,name=OrderUUID,json=order_uuid,proto3" json:"OrderUUID,omitempty"`
	Quantity  float64    `protobuf:"fixed64,3,opt,name=Quantity,json=quantity,proto3" json:"Quantity,omitempty"`
	UnitPrice float64    `protobuf:"fixed64,4,opt,name=UnitPrice,json=unit_price,proto3" json:"UnitPrice,omitempty"`
	OrderType OrderType  `protobuf:"varint,5,opt,name=OrderType,json=order_type,proto3,enum=grpc_order.OrderType" json:"OrderType,omitempty"`
	Symbol    SymbolType `protobuf:"varint,6,opt,name=Symbol,json=symbol,proto3,enum=grpc_order.SymbolType" json:"Symbol,omitempty"`
}

func (x *OrderCancelled) Reset() {
	*x = OrderCancelled{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_grpc_order_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCancelled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCancelled) ProtoMessage() {}

func (x *OrderCancelled) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_order_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCancelled.ProtoReflect.Descriptor instead.
func (*OrderCancelled) Descriptor() ([]byte, []int) {
	return file_proto_grpc_order_message_proto_rawDescGZIP(), []int{4}
}

func (x *OrderCancelled) GetUserUUID() string {
	if x != nil {
		return x.UserUUID
	}
	return ""
}

func (x *OrderCancelled) GetOrderUUID() string {
	if x != nil {
		return x.OrderUUID
	}
	return ""
}

func (x *OrderCancelled) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *OrderCancelled) GetUnitPrice() float64 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

func (x *OrderCancelled) GetOrderType() OrderType {
	if x != nil {
		return x.OrderType
	}
	return OrderType_ORDER_NIL
}

func (x *OrderCancelled) GetSymbol() SymbolType {
	if x != nil {
		return x.Symbol
	}
	return SymbolType_SYMBOL_NIL
}

type OrderCancellationFailed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUUID  string `protobuf:"bytes,1,opt,name=UserUUID,json=user_uuid,proto3" json:"UserUUID,omitempty"`
	OrderUUID string `protobuf:"bytes,2,opt,name=OrderUUID,json=order_uuid,proto3" json:"OrderUUID,omitempty"`
	Msg       string `protobuf:"bytes,3,opt,name=Msg,json=msg,proto3" json:"Msg,omitempty"`
}

func (x *OrderCancellationFailed) Reset() {
	*x = OrderCancellationFailed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_grpc_order_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCancellationFailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCancellationFailed) ProtoMessage() {}

func (x *OrderCancellationFailed) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_order_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCancellationFailed.ProtoReflect.Descriptor instead.
func (*OrderCancellationFailed) Descriptor() ([]byte, []int) {
	return file_proto_grpc_order_message_proto_rawDescGZIP(), []int{5}
}

func (x *OrderCancellationFailed) GetUserUUID() string {
	if x != nil {
		return x.UserUUID
	}
	return ""
}

func (x *OrderCancellationFailed) GetOrderUUID() string {
	if x != nil {
		return x.OrderUUID
	}
	return ""
}

func (x *OrderCancellationFailed) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type OrderFulfillment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUUID       string                 `protobuf:"bytes,1,opt,name=UserUUID,json=user_uuid,proto3" json:"UserUUID,omitempty"`
	OrderUUID      string                 `protobuf:"bytes,2,opt,name=OrderUUID,json=order_uuid,proto3" json:"OrderUUID,omitempty"`
	FilledQuantity float64                `protobuf:"fixed64,3,opt,name=FilledQuantity,json=filled_quantity,proto3" json:"FilledQuantity,omitempty"`
	UnitPrice      float64                `protobuf:"fixed64,4,opt,name=UnitPrice,json=unit_price,proto3" json:"UnitPrice,omitempty"`
	Symbol         SymbolType             `protobuf:"varint,5,opt,name=Symbol,json=symbol,proto3,enum=grpc_order.SymbolType" json:"Symbol,omitempty"`
	OrderType      OrderType              `protobuf:"varint,6,opt,name=OrderType,json=order_type,proto3,enum=grpc_order.OrderType" json:"OrderType,omitempty"`
	MakeTime       *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=MakeTime,json=make_time,proto3" json:"MakeTime,omitempty"`
	TakeTime       *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=TakeTime,json=take_time,proto3" json:"TakeTime,omitempty"`
	Fee            *Fee                   `protobuf:"bytes,9,opt,name=Fee,json=fee,proto3" json:"Fee,omitempty"`
}

func (x *OrderFulfillment) Reset() {
	*x = OrderFulfillment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_grpc_order_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderFulfillment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderFulfillment) ProtoMessage() {}

func (x *OrderFulfillment) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_order_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderFulfillment.ProtoReflect.Descriptor instead.
func (*OrderFulfillment) Descriptor() ([]byte, []int) {
	return file_proto_grpc_order_message_proto_rawDescGZIP(), []int{6}
}

func (x *OrderFulfillment) GetUserUUID() string {
	if x != nil {
		return x.UserUUID
	}
	return ""
}

func (x *OrderFulfillment) GetOrderUUID() string {
	if x != nil {
		return x.OrderUUID
	}
	return ""
}

func (x *OrderFulfillment) GetFilledQuantity() float64 {
	if x != nil {
		return x.FilledQuantity
	}
	return 0
}

func (x *OrderFulfillment) GetUnitPrice() float64 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

func (x *OrderFulfillment) GetSymbol() SymbolType {
	if x != nil {
		return x.Symbol
	}
	return SymbolType_SYMBOL_NIL
}

func (x *OrderFulfillment) GetOrderType() OrderType {
	if x != nil {
		return x.OrderType
	}
	return OrderType_ORDER_NIL
}

func (x *OrderFulfillment) GetMakeTime() *timestamppb.Timestamp {
	if x != nil {
		return x.MakeTime
	}
	return nil
}

func (x *OrderFulfillment) GetTakeTime() *timestamppb.Timestamp {
	if x != nil {
		return x.TakeTime
	}
	return nil
}

func (x *OrderFulfillment) GetFee() *Fee {
	if x != nil {
		return x.Fee
	}
	return nil
}

type OrderInitialize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUUID  string                 `protobuf:"bytes,1,opt,name=UserUUID,json=user_uuid,proto3" json:"UserUUID,omitempty"`
	OrderUUID string                 `protobuf:"bytes,2,opt,name=OrderUUID,json=order_uuid,proto3" json:"OrderUUID,omitempty"`
	Quantity  float64                `protobuf:"fixed64,3,opt,name=Quantity,json=quantity,proto3" json:"Quantity,omitempty"`
	UnitPrice float64                `protobuf:"fixed64,4,opt,name=UnitPrice,json=unit_price,proto3" json:"UnitPrice,omitempty"`
	Symbol    SymbolType             `protobuf:"varint,5,opt,name=Symbol,json=symbol,proto3,enum=grpc_order.SymbolType" json:"Symbol,omitempty"`
	OrderType OrderType              `protobuf:"varint,6,opt,name=OrderType,json=order_type,proto3,enum=grpc_order.OrderType" json:"OrderType,omitempty"`
	MakeTime  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=MakeTime,json=make_time,proto3" json:"MakeTime,omitempty"`
}

func (x *OrderInitialize) Reset() {
	*x = OrderInitialize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_grpc_order_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderInitialize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderInitialize) ProtoMessage() {}

func (x *OrderInitialize) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_order_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderInitialize.ProtoReflect.Descriptor instead.
func (*OrderInitialize) Descriptor() ([]byte, []int) {
	return file_proto_grpc_order_message_proto_rawDescGZIP(), []int{7}
}

func (x *OrderInitialize) GetUserUUID() string {
	if x != nil {
		return x.UserUUID
	}
	return ""
}

func (x *OrderInitialize) GetOrderUUID() string {
	if x != nil {
		return x.OrderUUID
	}
	return ""
}

func (x *OrderInitialize) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *OrderInitialize) GetUnitPrice() float64 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

func (x *OrderInitialize) GetSymbol() SymbolType {
	if x != nil {
		return x.Symbol
	}
	return SymbolType_SYMBOL_NIL
}

func (x *OrderInitialize) GetOrderType() OrderType {
	if x != nil {
		return x.OrderType
	}
	return OrderType_ORDER_NIL
}

func (x *OrderInitialize) GetMakeTime() *timestamppb.Timestamp {
	if x != nil {
		return x.MakeTime
	}
	return nil
}

type OrderMatching struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitPrice float64                `protobuf:"fixed64,1,opt,name=UnitPrice,json=unit_price,proto3" json:"UnitPrice,omitempty"`
	Quantity  float64                `protobuf:"fixed64,2,opt,name=Quantity,json=quantity,proto3" json:"Quantity,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=Timestamp,json=timestamp,proto3" json:"Timestamp,omitempty"`
	OrderType OrderType              `protobuf:"varint,4,opt,name=OrderType,json=order_type,proto3,enum=grpc_order.OrderType" json:"OrderType,omitempty"`
	Symbol    SymbolType             `protobuf:"varint,5,opt,name=Symbol,json=symbol,proto3,enum=grpc_order.SymbolType" json:"Symbol,omitempty"`
}

func (x *OrderMatching) Reset() {
	*x = OrderMatching{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_grpc_order_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderMatching) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderMatching) ProtoMessage() {}

func (x *OrderMatching) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_order_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderMatching.ProtoReflect.Descriptor instead.
func (*OrderMatching) Descriptor() ([]byte, []int) {
	return file_proto_grpc_order_message_proto_rawDescGZIP(), []int{8}
}

func (x *OrderMatching) GetUnitPrice() float64 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

func (x *OrderMatching) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *OrderMatching) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *OrderMatching) GetOrderType() OrderType {
	if x != nil {
		return x.OrderType
	}
	return OrderType_ORDER_NIL
}

func (x *OrderMatching) GetSymbol() SymbolType {
	if x != nil {
		return x.Symbol
	}
	return SymbolType_SYMBOL_NIL
}

type OrderMatchingFailed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUUID  string                 `protobuf:"bytes,1,opt,name=UserUUID,json=user_uuid,proto3" json:"UserUUID,omitempty"`
	OrderUUID string                 `protobuf:"bytes,2,opt,name=OrderUUID,json=order_uuid,proto3" json:"OrderUUID,omitempty"`
	Quantity  float64                `protobuf:"fixed64,3,opt,name=Quantity,json=quantity,proto3" json:"Quantity,omitempty"`                              // btceth => bid인 경우 btc : btc 소모해서 eth 구매, ask인 경우 eth : eth 소모해서 btc 구매
	OrderType OrderType              `protobuf:"varint,4,opt,name=OrderType,json=order_type,proto3,enum=grpc_order.OrderType" json:"OrderType,omitempty"` // bid or ask
	Symbol    SymbolType             `protobuf:"varint,5,opt,name=Symbol,json=symbol,proto3,enum=grpc_order.SymbolType" json:"Symbol,omitempty"`          // btceth
	MakeTime  *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=MakeTime,json=make_time,proto3" json:"MakeTime,omitempty"`
	Msg       string                 `protobuf:"bytes,7,opt,name=Msg,json=msg,proto3" json:"Msg,omitempty"`
}

func (x *OrderMatchingFailed) Reset() {
	*x = OrderMatchingFailed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_grpc_order_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderMatchingFailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderMatchingFailed) ProtoMessage() {}

func (x *OrderMatchingFailed) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_order_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderMatchingFailed.ProtoReflect.Descriptor instead.
func (*OrderMatchingFailed) Descriptor() ([]byte, []int) {
	return file_proto_grpc_order_message_proto_rawDescGZIP(), []int{9}
}

func (x *OrderMatchingFailed) GetUserUUID() string {
	if x != nil {
		return x.UserUUID
	}
	return ""
}

func (x *OrderMatchingFailed) GetOrderUUID() string {
	if x != nil {
		return x.OrderUUID
	}
	return ""
}

func (x *OrderMatchingFailed) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *OrderMatchingFailed) GetOrderType() OrderType {
	if x != nil {
		return x.OrderType
	}
	return OrderType_ORDER_NIL
}

func (x *OrderMatchingFailed) GetSymbol() SymbolType {
	if x != nil {
		return x.Symbol
	}
	return SymbolType_SYMBOL_NIL
}

func (x *OrderMatchingFailed) GetMakeTime() *timestamppb.Timestamp {
	if x != nil {
		return x.MakeTime
	}
	return nil
}

func (x *OrderMatchingFailed) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type OrderPartialFill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUUID       string                 `protobuf:"bytes,1,opt,name=UserUUID,json=user_uuid,proto3" json:"UserUUID,omitempty"`
	OrderUUID      string                 `protobuf:"bytes,2,opt,name=OrderUUID,json=order_uuid,proto3" json:"OrderUUID,omitempty"`
	TotalQuantity  float64                `protobuf:"fixed64,3,opt,name=TotalQuantity,json=total_quantity,proto3" json:"TotalQuantity,omitempty"`
	FilledQuantity float64                `protobuf:"fixed64,4,opt,name=FilledQuantity,json=filled_quantity,proto3" json:"FilledQuantity,omitempty"`
	UnitPrice      float64                `protobuf:"fixed64,5,opt,name=UnitPrice,json=unit_price,proto3" json:"UnitPrice,omitempty"`
	Symbol         SymbolType             `protobuf:"varint,6,opt,name=Symbol,json=symbol,proto3,enum=grpc_order.SymbolType" json:"Symbol,omitempty"`
	OrderType      OrderType              `protobuf:"varint,7,opt,name=OrderType,json=order_type,proto3,enum=grpc_order.OrderType" json:"OrderType,omitempty"`
	MakeTime       *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=MakeTime,json=make_time,proto3" json:"MakeTime,omitempty"`
	TakeTime       *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=TakeTime,json=take_time,proto3" json:"TakeTime,omitempty"`
	Fee            *Fee                   `protobuf:"bytes,10,opt,name=Fee,json=fee,proto3" json:"Fee,omitempty"`
}

func (x *OrderPartialFill) Reset() {
	*x = OrderPartialFill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_grpc_order_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPartialFill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPartialFill) ProtoMessage() {}

func (x *OrderPartialFill) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_order_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPartialFill.ProtoReflect.Descriptor instead.
func (*OrderPartialFill) Descriptor() ([]byte, []int) {
	return file_proto_grpc_order_message_proto_rawDescGZIP(), []int{10}
}

func (x *OrderPartialFill) GetUserUUID() string {
	if x != nil {
		return x.UserUUID
	}
	return ""
}

func (x *OrderPartialFill) GetOrderUUID() string {
	if x != nil {
		return x.OrderUUID
	}
	return ""
}

func (x *OrderPartialFill) GetTotalQuantity() float64 {
	if x != nil {
		return x.TotalQuantity
	}
	return 0
}

func (x *OrderPartialFill) GetFilledQuantity() float64 {
	if x != nil {
		return x.FilledQuantity
	}
	return 0
}

func (x *OrderPartialFill) GetUnitPrice() float64 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

func (x *OrderPartialFill) GetSymbol() SymbolType {
	if x != nil {
		return x.Symbol
	}
	return SymbolType_SYMBOL_NIL
}

func (x *OrderPartialFill) GetOrderType() OrderType {
	if x != nil {
		return x.OrderType
	}
	return OrderType_ORDER_NIL
}

func (x *OrderPartialFill) GetMakeTime() *timestamppb.Timestamp {
	if x != nil {
		return x.MakeTime
	}
	return nil
}

func (x *OrderPartialFill) GetTakeTime() *timestamppb.Timestamp {
	if x != nil {
		return x.TakeTime
	}
	return nil
}

func (x *OrderPartialFill) GetFee() *Fee {
	if x != nil {
		return x.Fee
	}
	return nil
}

type OrderPlacement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUUID  string                 `protobuf:"bytes,1,opt,name=UserUUID,json=user_uuid,proto3" json:"UserUUID,omitempty"`
	OrderUUID string                 `protobuf:"bytes,2,opt,name=OrderUUID,json=order_uuid,proto3" json:"OrderUUID,omitempty"`
	Quantity  float64                `protobuf:"fixed64,3,opt,name=Quantity,json=quantity,proto3" json:"Quantity,omitempty"`
	UnitPrice float64                `protobuf:"fixed64,4,opt,name=UnitPrice,json=unit_price,proto3" json:"UnitPrice,omitempty"`
	Symbol    SymbolType             `protobuf:"varint,5,opt,name=Symbol,json=symbol,proto3,enum=grpc_order.SymbolType" json:"Symbol,omitempty"`
	OrderType OrderType              `protobuf:"varint,6,opt,name=OrderType,json=order_type,proto3,enum=grpc_order.OrderType" json:"OrderType,omitempty"`
	MakeTime  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=MakeTime,json=make_time,proto3" json:"MakeTime,omitempty"`
}

func (x *OrderPlacement) Reset() {
	*x = OrderPlacement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_grpc_order_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPlacement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPlacement) ProtoMessage() {}

func (x *OrderPlacement) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_order_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPlacement.ProtoReflect.Descriptor instead.
func (*OrderPlacement) Descriptor() ([]byte, []int) {
	return file_proto_grpc_order_message_proto_rawDescGZIP(), []int{11}
}

func (x *OrderPlacement) GetUserUUID() string {
	if x != nil {
		return x.UserUUID
	}
	return ""
}

func (x *OrderPlacement) GetOrderUUID() string {
	if x != nil {
		return x.OrderUUID
	}
	return ""
}

func (x *OrderPlacement) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *OrderPlacement) GetUnitPrice() float64 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

func (x *OrderPlacement) GetSymbol() SymbolType {
	if x != nil {
		return x.Symbol
	}
	return SymbolType_SYMBOL_NIL
}

func (x *OrderPlacement) GetOrderType() OrderType {
	if x != nil {
		return x.OrderType
	}
	return OrderType_ORDER_NIL
}

func (x *OrderPlacement) GetMakeTime() *timestamppb.Timestamp {
	if x != nil {
		return x.MakeTime
	}
	return nil
}

type OrderPlacementFailed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUUID  string `protobuf:"bytes,1,opt,name=UserUUID,json=user_uuid,proto3" json:"UserUUID,omitempty"`
	OrderUUID string `protobuf:"bytes,2,opt,name=OrderUUID,json=order_uuid,proto3" json:"OrderUUID,omitempty"`
	Msg       string `protobuf:"bytes,3,opt,name=Msg,json=msg,proto3" json:"Msg,omitempty"`
}

func (x *OrderPlacementFailed) Reset() {
	*x = OrderPlacementFailed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_grpc_order_message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPlacementFailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPlacementFailed) ProtoMessage() {}

func (x *OrderPlacementFailed) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_order_message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPlacementFailed.ProtoReflect.Descriptor instead.
func (*OrderPlacementFailed) Descriptor() ([]byte, []int) {
	return file_proto_grpc_order_message_proto_rawDescGZIP(), []int{12}
}

func (x *OrderPlacementFailed) GetUserUUID() string {
	if x != nil {
		return x.UserUUID
	}
	return ""
}

func (x *OrderPlacementFailed) GetOrderUUID() string {
	if x != nil {
		return x.OrderUUID
	}
	return ""
}

func (x *OrderPlacementFailed) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type MarketOrderInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUUID  string                 `protobuf:"bytes,1,opt,name=UserUUID,json=user_uuid,proto3" json:"UserUUID,omitempty"`
	OrderUUID string                 `protobuf:"bytes,2,opt,name=OrderUUID,json=order_uuid,proto3" json:"OrderUUID,omitempty"`
	Quantity  float64                `protobuf:"fixed64,3,opt,name=Quantity,json=quantity,proto3" json:"Quantity,omitempty"`
	OrderType OrderType              `protobuf:"varint,4,opt,name=OrderType,json=order_type,proto3,enum=grpc_order.OrderType" json:"OrderType,omitempty"`
	Symbol    SymbolType             `protobuf:"varint,5,opt,name=Symbol,json=symbol,proto3,enum=grpc_order.SymbolType" json:"Symbol,omitempty"`
	MakeTime  *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=MakeTime,json=make_time,proto3" json:"MakeTime,omitempty"`
}

func (x *MarketOrderInput) Reset() {
	*x = MarketOrderInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_grpc_order_message_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketOrderInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketOrderInput) ProtoMessage() {}

func (x *MarketOrderInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_order_message_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketOrderInput.ProtoReflect.Descriptor instead.
func (*MarketOrderInput) Descriptor() ([]byte, []int) {
	return file_proto_grpc_order_message_proto_rawDescGZIP(), []int{13}
}

func (x *MarketOrderInput) GetUserUUID() string {
	if x != nil {
		return x.UserUUID
	}
	return ""
}

func (x *MarketOrderInput) GetOrderUUID() string {
	if x != nil {
		return x.OrderUUID
	}
	return ""
}

func (x *MarketOrderInput) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *MarketOrderInput) GetOrderType() OrderType {
	if x != nil {
		return x.OrderType
	}
	return OrderType_ORDER_NIL
}

func (x *MarketOrderInput) GetSymbol() SymbolType {
	if x != nil {
		return x.Symbol
	}
	return SymbolType_SYMBOL_NIL
}

func (x *MarketOrderInput) GetMakeTime() *timestamppb.Timestamp {
	if x != nil {
		return x.MakeTime
	}
	return nil
}

type MarketOrderOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
}

func (x *MarketOrderOutput) Reset() {
	*x = MarketOrderOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_grpc_order_message_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketOrderOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketOrderOutput) ProtoMessage() {}

func (x *MarketOrderOutput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_order_message_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketOrderOutput.ProtoReflect.Descriptor instead.
func (*MarketOrderOutput) Descriptor() ([]byte, []int) {
	return file_proto_grpc_order_message_proto_rawDescGZIP(), []int{14}
}

func (x *MarketOrderOutput) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type LimitOrderInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUUID  string                 `protobuf:"bytes,1,opt,name=UserUUID,json=user_uuid,proto3" json:"UserUUID,omitempty"`
	OrderUUID string                 `protobuf:"bytes,2,opt,name=OrderUUID,json=order_uuid,proto3" json:"OrderUUID,omitempty"`
	Quantity  float64                `protobuf:"fixed64,3,opt,name=Quantity,json=quantity,proto3" json:"Quantity,omitempty"`
	UnitPrice float64                `protobuf:"fixed64,4,opt,name=UnitPrice,json=unit_price,proto3" json:"UnitPrice,omitempty"`
	OrderType OrderType              `protobuf:"varint,5,opt,name=OrderType,json=order_type,proto3,enum=grpc_order.OrderType" json:"OrderType,omitempty"`
	Symbol    SymbolType             `protobuf:"varint,6,opt,name=Symbol,json=symbol,proto3,enum=grpc_order.SymbolType" json:"Symbol,omitempty"`
	MakeTime  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=MakeTime,json=make_time,proto3" json:"MakeTime,omitempty"`
}

func (x *LimitOrderInput) Reset() {
	*x = LimitOrderInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_grpc_order_message_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LimitOrderInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LimitOrderInput) ProtoMessage() {}

func (x *LimitOrderInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_order_message_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LimitOrderInput.ProtoReflect.Descriptor instead.
func (*LimitOrderInput) Descriptor() ([]byte, []int) {
	return file_proto_grpc_order_message_proto_rawDescGZIP(), []int{15}
}

func (x *LimitOrderInput) GetUserUUID() string {
	if x != nil {
		return x.UserUUID
	}
	return ""
}

func (x *LimitOrderInput) GetOrderUUID() string {
	if x != nil {
		return x.OrderUUID
	}
	return ""
}

func (x *LimitOrderInput) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *LimitOrderInput) GetUnitPrice() float64 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

func (x *LimitOrderInput) GetOrderType() OrderType {
	if x != nil {
		return x.OrderType
	}
	return OrderType_ORDER_NIL
}

func (x *LimitOrderInput) GetSymbol() SymbolType {
	if x != nil {
		return x.Symbol
	}
	return SymbolType_SYMBOL_NIL
}

func (x *LimitOrderInput) GetMakeTime() *timestamppb.Timestamp {
	if x != nil {
		return x.MakeTime
	}
	return nil
}

type LimitOrderOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=Success,json=success,proto3" json:"Success,omitempty"`
}

func (x *LimitOrderOutput) Reset() {
	*x = LimitOrderOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_grpc_order_message_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LimitOrderOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LimitOrderOutput) ProtoMessage() {}

func (x *LimitOrderOutput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_order_message_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LimitOrderOutput.ProtoReflect.Descriptor instead.
func (*LimitOrderOutput) Descriptor() ([]byte, []int) {
	return file_proto_grpc_order_message_proto_rawDescGZIP(), []int{16}
}

func (x *LimitOrderOutput) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type BalanceUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUUID string   `protobuf:"bytes,1,opt,name=UserUUID,json=user_uuid,proto3" json:"UserUUID,omitempty"`
	Diff     float64  `protobuf:"fixed64,2,opt,name=Diff,json=diff,proto3" json:"Diff,omitempty"`
	Currency Currency `protobuf:"varint,3,opt,name=Currency,json=currency,proto3,enum=grpc_order.Currency" json:"Currency,omitempty"`
	Reason   Reason   `protobuf:"varint,4,opt,name=Reason,json=reason,proto3,enum=grpc_order.Reason" json:"Reason,omitempty"`
}

func (x *BalanceUpdate) Reset() {
	*x = BalanceUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_grpc_order_message_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceUpdate) ProtoMessage() {}

func (x *BalanceUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_order_message_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceUpdate.ProtoReflect.Descriptor instead.
func (*BalanceUpdate) Descriptor() ([]byte, []int) {
	return file_proto_grpc_order_message_proto_rawDescGZIP(), []int{17}
}

func (x *BalanceUpdate) GetUserUUID() string {
	if x != nil {
		return x.UserUUID
	}
	return ""
}

func (x *BalanceUpdate) GetDiff() float64 {
	if x != nil {
		return x.Diff
	}
	return 0
}

func (x *BalanceUpdate) GetCurrency() Currency {
	if x != nil {
		return x.Currency
	}
	return Currency_CURRENCY_NIL
}

func (x *BalanceUpdate) GetReason() Reason {
	if x != nil {
		return x.Reason
	}
	return Reason_ADVANCE_PAYMENT
}

type BidAsk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bid *Order `protobuf:"bytes,1,opt,name=bid,proto3" json:"bid,omitempty"`
	Ask *Order `protobuf:"bytes,2,opt,name=ask,proto3" json:"ask,omitempty"`
}

func (x *BidAsk) Reset() {
	*x = BidAsk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_grpc_order_message_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidAsk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidAsk) ProtoMessage() {}

func (x *BidAsk) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_order_message_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidAsk.ProtoReflect.Descriptor instead.
func (*BidAsk) Descriptor() ([]byte, []int) {
	return file_proto_grpc_order_message_proto_rawDescGZIP(), []int{18}
}

func (x *BidAsk) GetBid() *Order {
	if x != nil {
		return x.Bid
	}
	return nil
}

func (x *BidAsk) GetAsk() *Order {
	if x != nil {
		return x.Ask
	}
	return nil
}

type GetOrderBookInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetOrderBookInput) Reset() {
	*x = GetOrderBookInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_grpc_order_message_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderBookInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderBookInput) ProtoMessage() {}

func (x *GetOrderBookInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_order_message_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderBookInput.ProtoReflect.Descriptor instead.
func (*GetOrderBookInput) Descriptor() ([]byte, []int) {
	return file_proto_grpc_order_message_proto_rawDescGZIP(), []int{19}
}

type OrderBookData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price  float64 `protobuf:"fixed64,1,opt,name=Price,json=price,proto3" json:"Price,omitempty"`
	Volume float64 `protobuf:"fixed64,2,opt,name=Volume,json=quantity,proto3" json:"Volume,omitempty"`
}

func (x *OrderBookData) Reset() {
	*x = OrderBookData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_grpc_order_message_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderBookData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderBookData) ProtoMessage() {}

func (x *OrderBookData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_order_message_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderBookData.ProtoReflect.Descriptor instead.
func (*OrderBookData) Descriptor() ([]byte, []int) {
	return file_proto_grpc_order_message_proto_rawDescGZIP(), []int{20}
}

func (x *OrderBookData) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *OrderBookData) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

type GetOrderBookOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bids []*OrderBookData `protobuf:"bytes,1,rep,name=bids,proto3" json:"bids,omitempty"`
	Asks []*OrderBookData `protobuf:"bytes,2,rep,name=asks,proto3" json:"asks,omitempty"`
}

func (x *GetOrderBookOutput) Reset() {
	*x = GetOrderBookOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_grpc_order_message_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderBookOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderBookOutput) ProtoMessage() {}

func (x *GetOrderBookOutput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_order_message_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderBookOutput.ProtoReflect.Descriptor instead.
func (*GetOrderBookOutput) Descriptor() ([]byte, []int) {
	return file_proto_grpc_order_message_proto_rawDescGZIP(), []int{21}
}

func (x *GetOrderBookOutput) GetBids() []*OrderBookData {
	if x != nil {
		return x.Bids
	}
	return nil
}

func (x *GetOrderBookOutput) GetAsks() []*OrderBookData {
	if x != nil {
		return x.Asks
	}
	return nil
}

type PushOrderBookInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol SymbolType `protobuf:"varint,1,opt,name=symbol,proto3,enum=grpc_order.SymbolType" json:"symbol,omitempty"`
}

func (x *PushOrderBookInput) Reset() {
	*x = PushOrderBookInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_grpc_order_message_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushOrderBookInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushOrderBookInput) ProtoMessage() {}

func (x *PushOrderBookInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_order_message_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushOrderBookInput.ProtoReflect.Descriptor instead.
func (*PushOrderBookInput) Descriptor() ([]byte, []int) {
	return file_proto_grpc_order_message_proto_rawDescGZIP(), []int{22}
}

func (x *PushOrderBookInput) GetSymbol() SymbolType {
	if x != nil {
		return x.Symbol
	}
	return SymbolType_SYMBOL_NIL
}

type ErrorInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Process  string           `protobuf:"bytes,1,opt,name=process,proto3" json:"process,omitempty"`
	Msg      string           `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Err      string           `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`
	Priority Priority         `protobuf:"varint,4,opt,name=priority,proto3,enum=grpc_order.Priority" json:"priority,omitempty"`
	Metadata *structpb.Struct `protobuf:"bytes,5,opt,name=metadata,json=data,proto3" json:"metadata,omitempty"`
}

func (x *ErrorInput) Reset() {
	*x = ErrorInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_grpc_order_message_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorInput) ProtoMessage() {}

func (x *ErrorInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_order_message_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorInput.ProtoReflect.Descriptor instead.
func (*ErrorInput) Descriptor() ([]byte, []int) {
	return file_proto_grpc_order_message_proto_rawDescGZIP(), []int{23}
}

func (x *ErrorInput) GetProcess() string {
	if x != nil {
		return x.Process
	}
	return ""
}

func (x *ErrorInput) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ErrorInput) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *ErrorInput) GetPriority() Priority {
	if x != nil {
		return x.Priority
	}
	return Priority_PRIORITY_NIL
}

func (x *ErrorInput) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_proto_grpc_order_message_proto protoreflect.FileDescriptor

var file_proto_grpc_order_message_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0a, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1d, 0x0a, 0x03, 0x46,
	0x65, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x1f, 0x0a, 0x03, 0x41, 0x63,
	0x6b, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x9d, 0x02, 0x0a, 0x05,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x55, 0x55, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x75, 0x75,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a,
	0x09, 0x55, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x09,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x15, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x16, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x12, 0x37, 0x0a, 0x08, 0x4d, 0x61, 0x6b, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x6d, 0x61, 0x6b, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x4f, 0x0a, 0x11, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1b, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x22, 0xed, 0x01, 0x0a,
	0x0e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x12,
	0x1b, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x09,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x09, 0x55, 0x6e, 0x69, 0x74, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x75, 0x6e, 0x69, 0x74,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x06,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x67, 0x0a, 0x17,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x55,
	0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x55, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x91, 0x03, 0x0a, 0x10, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46,
	0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x6c, 0x65, 0x64,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f,
	0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x1d, 0x0a, 0x09, 0x55, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2e,
	0x0a, 0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x34,
	0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x15, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x4d, 0x61, 0x6b, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x6d, 0x61, 0x6b, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x37, 0x0a,
	0x08, 0x54, 0x61, 0x6b, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x61, 0x6b,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x03, 0x46, 0x65, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x46, 0x65, 0x65, 0x52, 0x03, 0x66, 0x65, 0x65, 0x22, 0xa7, 0x02, 0x0a, 0x0f, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a,
	0x08, 0x55, 0x73, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x09, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x09, 0x55, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x34, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x4d, 0x61,
	0x6b, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x6d, 0x61, 0x6b, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x22, 0xea, 0x01, 0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x09, 0x55, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x38, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x34, 0x0a, 0x09, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x2e, 0x0a, 0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x22, 0x9e, 0x02, 0x0a, 0x13, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69,
	0x6e, 0x67, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72,
	0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x55,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x34, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x37, 0x0a, 0x08, 0x4d, 0x61, 0x6b, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x6d, 0x61, 0x6b, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x22, 0xb8, 0x03, 0x0a, 0x10, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x61, 0x6c, 0x46, 0x69, 0x6c, 0x6c, 0x12, 0x1b, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x55, 0x55,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x75,
	0x69, 0x64, 0x12, 0x25, 0x0a, 0x0d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x51, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x27, 0x0a, 0x0e, 0x46, 0x69, 0x6c,
	0x6c, 0x65, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0f, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x1d, 0x0a, 0x09, 0x55, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x2e, 0x0a, 0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x16, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x12, 0x34, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x4d, 0x61, 0x6b, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x6d, 0x61, 0x6b, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x37, 0x0a, 0x08, 0x54, 0x61, 0x6b, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x74, 0x61, 0x6b, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x03, 0x46, 0x65, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x46, 0x65, 0x65, 0x52, 0x03, 0x66, 0x65, 0x65, 0x22, 0xa6, 0x02, 0x0a,
	0x0e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x1b, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x09,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x09, 0x55, 0x6e, 0x69, 0x74, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x75, 0x6e, 0x69, 0x74,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x34, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a, 0x08,
	0x4d, 0x61, 0x6b, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x6d, 0x61, 0x6b, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x64, 0x0a, 0x14, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x6c,
	0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x1b, 0x0a,
	0x08, 0x55, 0x73, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x09, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x89, 0x02, 0x0a, 0x10,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x1b, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x34, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2e,
	0x0a, 0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x37,
	0x0a, 0x08, 0x4d, 0x61, 0x6b, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x6d, 0x61,
	0x6b, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x2d, 0x0a, 0x11, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xa7, 0x02, 0x0a, 0x0f, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x1d, 0x0a, 0x09, 0x55, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x34, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x37, 0x0a, 0x08, 0x4d, 0x61, 0x6b, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x6d, 0x61, 0x6b, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x22, 0x2c, 0x0a, 0x10, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x9e,
	0x01, 0x0a, 0x0d, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x1b, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x44, 0x69, 0x66, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x64, 0x69, 0x66,
	0x66, 0x12, 0x30, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x2a, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22,
	0x52, 0x0a, 0x06, 0x42, 0x69, 0x64, 0x41, 0x73, 0x6b, 0x12, 0x23, 0x0a, 0x03, 0x62, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x03, 0x62, 0x69, 0x64, 0x12, 0x23,
	0x0a, 0x03, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x03,
	0x61, 0x73, 0x6b, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x3f, 0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x18, 0x0a, 0x06, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x72, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x2d, 0x0a, 0x04, 0x62, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x6f, 0x6f, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x62, 0x69, 0x64, 0x73, 0x12, 0x2d,
	0x0a, 0x04, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x6f, 0x6f, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x44, 0x0a,
	0x12, 0x50, 0x75, 0x73, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x22, 0xad, 0x01, 0x0a, 0x0a, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x10,
	0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72,
	0x12, 0x30, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x2f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x2a, 0x2c, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0d, 0x0a, 0x09, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x4e, 0x49, 0x4c, 0x10, 0x00, 0x12,
	0x07, 0x0a, 0x03, 0x42, 0x49, 0x44, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x4b, 0x10,
	0x02, 0x2a, 0x3b, 0x0a, 0x08, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a,
	0x0c, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x4e, 0x49, 0x4c, 0x10, 0x00, 0x12,
	0x07, 0x0a, 0x03, 0x4c, 0x4f, 0x57, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x45, 0x44, 0x49,
	0x55, 0x4d, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x49, 0x47, 0x48, 0x10, 0x03, 0x2a, 0xd9,
	0x01, 0x0a, 0x0a, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a,
	0x0a, 0x53, 0x59, 0x4d, 0x42, 0x4f, 0x4c, 0x5f, 0x4e, 0x49, 0x4c, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x42, 0x54, 0x43, 0x45, 0x54, 0x48, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x54, 0x43,
	0x45, 0x54, 0x43, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x54, 0x43, 0x4d, 0x41, 0x54, 0x49,
	0x43, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x54, 0x43, 0x4c, 0x50, 0x54, 0x10, 0x04, 0x12,
	0x0b, 0x0a, 0x07, 0x42, 0x54, 0x43, 0x4d, 0x41, 0x4e, 0x41, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06,
	0x42, 0x54, 0x43, 0x41, 0x58, 0x53, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x54, 0x43, 0x41,
	0x55, 0x44, 0x49, 0x4f, 0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x54, 0x43, 0x53, 0x41, 0x4e,
	0x44, 0x10, 0x08, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x54, 0x43, 0x43, 0x4f, 0x4d, 0x50, 0x10, 0x09,
	0x12, 0x0b, 0x0a, 0x07, 0x42, 0x54, 0x43, 0x4c, 0x49, 0x4e, 0x4b, 0x10, 0x0a, 0x12, 0x0b, 0x0a,
	0x07, 0x42, 0x54, 0x43, 0x44, 0x59, 0x44, 0x58, 0x10, 0x0b, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x54,
	0x43, 0x42, 0x4e, 0x42, 0x10, 0x0c, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x54, 0x43, 0x4f, 0x50, 0x10,
	0x0d, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x54, 0x43, 0x41, 0x56, 0x41, 0x58, 0x10, 0x0e, 0x12, 0x0a,
	0x0a, 0x06, 0x42, 0x54, 0x43, 0x41, 0x52, 0x42, 0x10, 0x0f, 0x2a, 0xb5, 0x01, 0x0a, 0x08, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x55, 0x52, 0x52, 0x45,
	0x4e, 0x43, 0x59, 0x5f, 0x4e, 0x49, 0x4c, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x54, 0x48,
	0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x54, 0x43, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x4d,
	0x41, 0x54, 0x49, 0x43, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x50, 0x54, 0x10, 0x04, 0x12,
	0x08, 0x0a, 0x04, 0x4d, 0x41, 0x4e, 0x41, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x58, 0x53,
	0x10, 0x06, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x10, 0x07, 0x12, 0x08, 0x0a,
	0x04, 0x53, 0x41, 0x4e, 0x44, 0x10, 0x08, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x4f, 0x4d, 0x50, 0x10,
	0x09, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x4e, 0x4b, 0x10, 0x0a, 0x12, 0x08, 0x0a, 0x04, 0x44,
	0x59, 0x44, 0x58, 0x10, 0x0b, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x4e, 0x42, 0x10, 0x0c, 0x12, 0x06,
	0x0a, 0x02, 0x4f, 0x50, 0x10, 0x0d, 0x12, 0x08, 0x0a, 0x04, 0x41, 0x56, 0x41, 0x58, 0x10, 0x0e,
	0x12, 0x07, 0x0a, 0x03, 0x41, 0x52, 0x42, 0x10, 0x0f, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x54, 0x43,
	0x10, 0x10, 0x2a, 0x5a, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x13, 0x0a, 0x0f,
	0x41, 0x44, 0x56, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x10, 0x01, 0x12, 0x0e,
	0x0a, 0x0a, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x08,
	0x0a, 0x04, 0x4d, 0x41, 0x4b, 0x45, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x41, 0x4b, 0x45,
	0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x46, 0x55, 0x4e, 0x44, 0x10, 0x05, 0x42, 0x0e,
	0x5a, 0x0c, 0x2e, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_grpc_order_message_proto_rawDescOnce sync.Once
	file_proto_grpc_order_message_proto_rawDescData = file_proto_grpc_order_message_proto_rawDesc
)

func file_proto_grpc_order_message_proto_rawDescGZIP() []byte {
	file_proto_grpc_order_message_proto_rawDescOnce.Do(func() {
		file_proto_grpc_order_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_grpc_order_message_proto_rawDescData)
	})
	return file_proto_grpc_order_message_proto_rawDescData
}

var file_proto_grpc_order_message_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_proto_grpc_order_message_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_proto_grpc_order_message_proto_goTypes = []interface{}{
	(OrderType)(0),                  // 0: grpc_order.OrderType
	(Priority)(0),                   // 1: grpc_order.Priority
	(SymbolType)(0),                 // 2: grpc_order.SymbolType
	(Currency)(0),                   // 3: grpc_order.Currency
	(Reason)(0),                     // 4: grpc_order.Reason
	(*Fee)(nil),                     // 5: grpc_order.Fee
	(*Ack)(nil),                     // 6: grpc_order.Ack
	(*Order)(nil),                   // 7: grpc_order.Order
	(*OrderCancellation)(nil),       // 8: grpc_order.OrderCancellation
	(*OrderCancelled)(nil),          // 9: grpc_order.OrderCancelled
	(*OrderCancellationFailed)(nil), // 10: grpc_order.OrderCancellationFailed
	(*OrderFulfillment)(nil),        // 11: grpc_order.OrderFulfillment
	(*OrderInitialize)(nil),         // 12: grpc_order.OrderInitialize
	(*OrderMatching)(nil),           // 13: grpc_order.OrderMatching
	(*OrderMatchingFailed)(nil),     // 14: grpc_order.OrderMatchingFailed
	(*OrderPartialFill)(nil),        // 15: grpc_order.OrderPartialFill
	(*OrderPlacement)(nil),          // 16: grpc_order.OrderPlacement
	(*OrderPlacementFailed)(nil),    // 17: grpc_order.OrderPlacementFailed
	(*MarketOrderInput)(nil),        // 18: grpc_order.MarketOrderInput
	(*MarketOrderOutput)(nil),       // 19: grpc_order.MarketOrderOutput
	(*LimitOrderInput)(nil),         // 20: grpc_order.LimitOrderInput
	(*LimitOrderOutput)(nil),        // 21: grpc_order.LimitOrderOutput
	(*BalanceUpdate)(nil),           // 22: grpc_order.BalanceUpdate
	(*BidAsk)(nil),                  // 23: grpc_order.BidAsk
	(*GetOrderBookInput)(nil),       // 24: grpc_order.GetOrderBookInput
	(*OrderBookData)(nil),           // 25: grpc_order.OrderBookData
	(*GetOrderBookOutput)(nil),      // 26: grpc_order.GetOrderBookOutput
	(*PushOrderBookInput)(nil),      // 27: grpc_order.PushOrderBookInput
	(*ErrorInput)(nil),              // 28: grpc_order.ErrorInput
	(*timestamppb.Timestamp)(nil),   // 29: google.protobuf.Timestamp
	(*structpb.Struct)(nil),         // 30: google.protobuf.Struct
}
var file_proto_grpc_order_message_proto_depIdxs = []int32{
	0,  // 0: grpc_order.Order.OrderType:type_name -> grpc_order.OrderType
	2,  // 1: grpc_order.Order.Symbol:type_name -> grpc_order.SymbolType
	29, // 2: grpc_order.Order.MakeTime:type_name -> google.protobuf.Timestamp
	0,  // 3: grpc_order.OrderCancelled.OrderType:type_name -> grpc_order.OrderType
	2,  // 4: grpc_order.OrderCancelled.Symbol:type_name -> grpc_order.SymbolType
	2,  // 5: grpc_order.OrderFulfillment.Symbol:type_name -> grpc_order.SymbolType
	0,  // 6: grpc_order.OrderFulfillment.OrderType:type_name -> grpc_order.OrderType
	29, // 7: grpc_order.OrderFulfillment.MakeTime:type_name -> google.protobuf.Timestamp
	29, // 8: grpc_order.OrderFulfillment.TakeTime:type_name -> google.protobuf.Timestamp
	5,  // 9: grpc_order.OrderFulfillment.Fee:type_name -> grpc_order.Fee
	2,  // 10: grpc_order.OrderInitialize.Symbol:type_name -> grpc_order.SymbolType
	0,  // 11: grpc_order.OrderInitialize.OrderType:type_name -> grpc_order.OrderType
	29, // 12: grpc_order.OrderInitialize.MakeTime:type_name -> google.protobuf.Timestamp
	29, // 13: grpc_order.OrderMatching.Timestamp:type_name -> google.protobuf.Timestamp
	0,  // 14: grpc_order.OrderMatching.OrderType:type_name -> grpc_order.OrderType
	2,  // 15: grpc_order.OrderMatching.Symbol:type_name -> grpc_order.SymbolType
	0,  // 16: grpc_order.OrderMatchingFailed.OrderType:type_name -> grpc_order.OrderType
	2,  // 17: grpc_order.OrderMatchingFailed.Symbol:type_name -> grpc_order.SymbolType
	29, // 18: grpc_order.OrderMatchingFailed.MakeTime:type_name -> google.protobuf.Timestamp
	2,  // 19: grpc_order.OrderPartialFill.Symbol:type_name -> grpc_order.SymbolType
	0,  // 20: grpc_order.OrderPartialFill.OrderType:type_name -> grpc_order.OrderType
	29, // 21: grpc_order.OrderPartialFill.MakeTime:type_name -> google.protobuf.Timestamp
	29, // 22: grpc_order.OrderPartialFill.TakeTime:type_name -> google.protobuf.Timestamp
	5,  // 23: grpc_order.OrderPartialFill.Fee:type_name -> grpc_order.Fee
	2,  // 24: grpc_order.OrderPlacement.Symbol:type_name -> grpc_order.SymbolType
	0,  // 25: grpc_order.OrderPlacement.OrderType:type_name -> grpc_order.OrderType
	29, // 26: grpc_order.OrderPlacement.MakeTime:type_name -> google.protobuf.Timestamp
	0,  // 27: grpc_order.MarketOrderInput.OrderType:type_name -> grpc_order.OrderType
	2,  // 28: grpc_order.MarketOrderInput.Symbol:type_name -> grpc_order.SymbolType
	29, // 29: grpc_order.MarketOrderInput.MakeTime:type_name -> google.protobuf.Timestamp
	0,  // 30: grpc_order.LimitOrderInput.OrderType:type_name -> grpc_order.OrderType
	2,  // 31: grpc_order.LimitOrderInput.Symbol:type_name -> grpc_order.SymbolType
	29, // 32: grpc_order.LimitOrderInput.MakeTime:type_name -> google.protobuf.Timestamp
	3,  // 33: grpc_order.BalanceUpdate.Currency:type_name -> grpc_order.Currency
	4,  // 34: grpc_order.BalanceUpdate.Reason:type_name -> grpc_order.Reason
	7,  // 35: grpc_order.BidAsk.bid:type_name -> grpc_order.Order
	7,  // 36: grpc_order.BidAsk.ask:type_name -> grpc_order.Order
	25, // 37: grpc_order.GetOrderBookOutput.bids:type_name -> grpc_order.OrderBookData
	25, // 38: grpc_order.GetOrderBookOutput.asks:type_name -> grpc_order.OrderBookData
	2,  // 39: grpc_order.PushOrderBookInput.symbol:type_name -> grpc_order.SymbolType
	1,  // 40: grpc_order.ErrorInput.priority:type_name -> grpc_order.Priority
	30, // 41: grpc_order.ErrorInput.metadata:type_name -> google.protobuf.Struct
	42, // [42:42] is the sub-list for method output_type
	42, // [42:42] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_proto_grpc_order_message_proto_init() }
func file_proto_grpc_order_message_proto_init() {
	if File_proto_grpc_order_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_grpc_order_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_grpc_order_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_grpc_order_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_grpc_order_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCancellation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_grpc_order_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCancelled); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_grpc_order_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCancellationFailed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_grpc_order_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderFulfillment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_grpc_order_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderInitialize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_grpc_order_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderMatching); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_grpc_order_message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderMatchingFailed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_grpc_order_message_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPartialFill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_grpc_order_message_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPlacement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_grpc_order_message_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPlacementFailed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_grpc_order_message_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketOrderInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_grpc_order_message_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketOrderOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_grpc_order_message_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LimitOrderInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_grpc_order_message_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LimitOrderOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_grpc_order_message_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_grpc_order_message_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BidAsk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_grpc_order_message_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderBookInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_grpc_order_message_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderBookData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_grpc_order_message_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderBookOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_grpc_order_message_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushOrderBookInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_grpc_order_message_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_grpc_order_message_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_grpc_order_message_proto_goTypes,
		DependencyIndexes: file_proto_grpc_order_message_proto_depIdxs,
		EnumInfos:         file_proto_grpc_order_message_proto_enumTypes,
		MessageInfos:      file_proto_grpc_order_message_proto_msgTypes,
	}.Build()
	File_proto_grpc_order_message_proto = out.File
	file_proto_grpc_order_message_proto_rawDesc = nil
	file_proto_grpc_order_message_proto_goTypes = nil
	file_proto_grpc_order_message_proto_depIdxs = nil
}
