// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.3
// source: proto/grpc_order/service.proto

package grpc_order

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_proto_grpc_order_service_proto protoreflect.FileDescriptor

var file_proto_grpc_order_service_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0a, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x1e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0x4f, 0x0a, 0x0b,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x0f, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x1c,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x0f, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x6b, 0x32, 0x4c, 0x0a,
	0x0a, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x0e, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x1b, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x0f, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x6b, 0x32, 0x4c, 0x0a, 0x0b, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x0b, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x6b, 0x32, 0xe0, 0x05, 0x0a, 0x05, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x13, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x61,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x6b, 0x12, 0x4e, 0x0a, 0x19, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x1a, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x6b, 0x12, 0x45, 0x0a, 0x16, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x1a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x1a, 0x0f, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x6b, 0x12, 0x54,
	0x0a, 0x1c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x23,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x1a, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x41, 0x63, 0x6b, 0x12, 0x40, 0x0a, 0x12, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x69, 0x6e, 0x67, 0x1a, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x41, 0x63, 0x6b, 0x12, 0x4c, 0x0a, 0x18, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x46, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x1a, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x41, 0x63, 0x6b, 0x12, 0x46, 0x0a, 0x15, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x6c, 0x1a, 0x0f, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x6b, 0x12, 0x46, 0x0a, 0x15,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d,
	0x65, 0x6e, 0x74, 0x1a, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x41, 0x63, 0x6b, 0x12, 0x44, 0x0a, 0x14, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x1a, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x6b, 0x12, 0x40, 0x0a, 0x12, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x19, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x0f, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x6b, 0x32, 0x9c, 0x01, 0x0a,
	0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x4d, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x1d, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x6f, 0x6f, 0x6b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x40, 0x0a, 0x0d, 0x50, 0x75, 0x73,
	0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x1e, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x0f, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x6b, 0x42, 0x0e, 0x5a, 0x0c, 0x2e,
	0x2f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var file_proto_grpc_order_service_proto_goTypes = []interface{}{
	(*MarketOrderInput)(nil),        // 0: grpc_order.MarketOrderInput
	(*LimitOrderInput)(nil),         // 1: grpc_order.LimitOrderInput
	(*OrderCancellation)(nil),       // 2: grpc_order.OrderCancellation
	(*OrderPlacement)(nil),          // 3: grpc_order.OrderPlacement
	(*OrderPlacementFailed)(nil),    // 4: grpc_order.OrderPlacementFailed
	(*OrderCancelled)(nil),          // 5: grpc_order.OrderCancelled
	(*OrderCancellationFailed)(nil), // 6: grpc_order.OrderCancellationFailed
	(*OrderMatching)(nil),           // 7: grpc_order.OrderMatching
	(*OrderMatchingFailed)(nil),     // 8: grpc_order.OrderMatchingFailed
	(*OrderPartialFill)(nil),        // 9: grpc_order.OrderPartialFill
	(*OrderFulfillment)(nil),        // 10: grpc_order.OrderFulfillment
	(*OrderInitialize)(nil),         // 11: grpc_order.OrderInitialize
	(*BalanceUpdate)(nil),           // 12: grpc_order.BalanceUpdate
	(*GetOrderBookInput)(nil),       // 13: grpc_order.GetOrderBookInput
	(*PushOrderBookInput)(nil),      // 14: grpc_order.PushOrderBookInput
	(*Ack)(nil),                     // 15: grpc_order.Ack
	(*GetOrderBookOutput)(nil),      // 16: grpc_order.GetOrderBookOutput
}
var file_proto_grpc_order_service_proto_depIdxs = []int32{
	0,  // 0: grpc_order.MarketOrder.MarketOrderInit:input_type -> grpc_order.MarketOrderInput
	1,  // 1: grpc_order.LimitOrder.LimitOrderInit:input_type -> grpc_order.LimitOrderInput
	2,  // 2: grpc_order.CancelOrder.CancelOrder:input_type -> grpc_order.OrderCancellation
	3,  // 3: grpc_order.Event.OrderPlacementEvent:input_type -> grpc_order.OrderPlacement
	4,  // 4: grpc_order.Event.OrderPlacementFailedEvent:input_type -> grpc_order.OrderPlacementFailed
	5,  // 5: grpc_order.Event.OrderCancellationEvent:input_type -> grpc_order.OrderCancelled
	6,  // 6: grpc_order.Event.OrderCancellationFailedEvent:input_type -> grpc_order.OrderCancellationFailed
	7,  // 7: grpc_order.Event.OrderMatchingEvent:input_type -> grpc_order.OrderMatching
	8,  // 8: grpc_order.Event.OrderMatchingFailedEvent:input_type -> grpc_order.OrderMatchingFailed
	9,  // 9: grpc_order.Event.OrderPartialFillEvent:input_type -> grpc_order.OrderPartialFill
	10, // 10: grpc_order.Event.OrderFulfillmentEvent:input_type -> grpc_order.OrderFulfillment
	11, // 11: grpc_order.Event.OrderInitializeEvent:input_type -> grpc_order.OrderInitialize
	12, // 12: grpc_order.Event.BalanceUpdateEvent:input_type -> grpc_order.BalanceUpdate
	13, // 13: grpc_order.OrderBook.GetOrderBook:input_type -> grpc_order.GetOrderBookInput
	14, // 14: grpc_order.OrderBook.PushOrderBook:input_type -> grpc_order.PushOrderBookInput
	15, // 15: grpc_order.MarketOrder.MarketOrderInit:output_type -> grpc_order.Ack
	15, // 16: grpc_order.LimitOrder.LimitOrderInit:output_type -> grpc_order.Ack
	15, // 17: grpc_order.CancelOrder.CancelOrder:output_type -> grpc_order.Ack
	15, // 18: grpc_order.Event.OrderPlacementEvent:output_type -> grpc_order.Ack
	15, // 19: grpc_order.Event.OrderPlacementFailedEvent:output_type -> grpc_order.Ack
	15, // 20: grpc_order.Event.OrderCancellationEvent:output_type -> grpc_order.Ack
	15, // 21: grpc_order.Event.OrderCancellationFailedEvent:output_type -> grpc_order.Ack
	15, // 22: grpc_order.Event.OrderMatchingEvent:output_type -> grpc_order.Ack
	15, // 23: grpc_order.Event.OrderMatchingFailedEvent:output_type -> grpc_order.Ack
	15, // 24: grpc_order.Event.OrderPartialFillEvent:output_type -> grpc_order.Ack
	15, // 25: grpc_order.Event.OrderFulfillmentEvent:output_type -> grpc_order.Ack
	15, // 26: grpc_order.Event.OrderInitializeEvent:output_type -> grpc_order.Ack
	15, // 27: grpc_order.Event.BalanceUpdateEvent:output_type -> grpc_order.Ack
	16, // 28: grpc_order.OrderBook.GetOrderBook:output_type -> grpc_order.GetOrderBookOutput
	15, // 29: grpc_order.OrderBook.PushOrderBook:output_type -> grpc_order.Ack
	15, // [15:30] is the sub-list for method output_type
	0,  // [0:15] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_proto_grpc_order_service_proto_init() }
func file_proto_grpc_order_service_proto_init() {
	if File_proto_grpc_order_service_proto != nil {
		return
	}
	file_proto_grpc_order_message_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_grpc_order_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   5,
		},
		GoTypes:           file_proto_grpc_order_service_proto_goTypes,
		DependencyIndexes: file_proto_grpc_order_service_proto_depIdxs,
	}.Build()
	File_proto_grpc_order_service_proto = out.File
	file_proto_grpc_order_service_proto_rawDesc = nil
	file_proto_grpc_order_service_proto_goTypes = nil
	file_proto_grpc_order_service_proto_depIdxs = nil
}
