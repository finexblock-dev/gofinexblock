// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.3
// source: proto/proxy/proxy.bitcoin.proto

package bitcoin_proxy

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BlockHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version    int32  `protobuf:"varint,1,opt,name=Version,json=version,proto3" json:"Version,omitempty"`
	PrevBlock  string `protobuf:"bytes,2,opt,name=PrevBlock,json=prev_block,proto3" json:"PrevBlock,omitempty"`
	MerkleRoot string `protobuf:"bytes,3,opt,name=MerkleRoot,json=merkle_root,proto3" json:"MerkleRoot,omitempty"`
	Timestamp  int64  `protobuf:"varint,4,opt,name=Timestamp,json=timestamp,proto3" json:"Timestamp,omitempty"`
	Bits       uint32 `protobuf:"varint,5,opt,name=Bits,json=bits,proto3" json:"Bits,omitempty"`
	Nonce      uint32 `protobuf:"varint,6,opt,name=Nonce,json=nonce,proto3" json:"Nonce,omitempty"`
}

func (x *BlockHeader) Reset() {
	*x = BlockHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockHeader) ProtoMessage() {}

func (x *BlockHeader) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockHeader.ProtoReflect.Descriptor instead.
func (*BlockHeader) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{0}
}

func (x *BlockHeader) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *BlockHeader) GetPrevBlock() string {
	if x != nil {
		return x.PrevBlock
	}
	return ""
}

func (x *BlockHeader) GetMerkleRoot() string {
	if x != nil {
		return x.MerkleRoot
	}
	return ""
}

func (x *BlockHeader) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *BlockHeader) GetBits() uint32 {
	if x != nil {
		return x.Bits
	}
	return 0
}

func (x *BlockHeader) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

type BlockOutPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash  string `protobuf:"bytes,1,opt,name=Hash,json=hash,proto3" json:"Hash,omitempty"`
	Index uint32 `protobuf:"varint,2,opt,name=Index,json=index,proto3" json:"Index,omitempty"`
}

func (x *BlockOutPoint) Reset() {
	*x = BlockOutPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockOutPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockOutPoint) ProtoMessage() {}

func (x *BlockOutPoint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockOutPoint.ProtoReflect.Descriptor instead.
func (*BlockOutPoint) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{1}
}

func (x *BlockOutPoint) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *BlockOutPoint) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type BlockTransactionInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PreviousOutPoint *BlockOutPoint `protobuf:"bytes,1,opt,name=PreviousOutPoint,json=previous_out_point,proto3" json:"PreviousOutPoint,omitempty"`
	SignatureScript  string         `protobuf:"bytes,2,opt,name=SignatureScript,json=signature_script,proto3" json:"SignatureScript,omitempty"`
	Sequence         uint32         `protobuf:"varint,3,opt,name=Sequence,json=sequence,proto3" json:"Sequence,omitempty"`
}

func (x *BlockTransactionInput) Reset() {
	*x = BlockTransactionInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockTransactionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockTransactionInput) ProtoMessage() {}

func (x *BlockTransactionInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockTransactionInput.ProtoReflect.Descriptor instead.
func (*BlockTransactionInput) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{2}
}

func (x *BlockTransactionInput) GetPreviousOutPoint() *BlockOutPoint {
	if x != nil {
		return x.PreviousOutPoint
	}
	return nil
}

func (x *BlockTransactionInput) GetSignatureScript() string {
	if x != nil {
		return x.SignatureScript
	}
	return ""
}

func (x *BlockTransactionInput) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

type BlockTransactionOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value        int64  `protobuf:"varint,1,opt,name=Value,json=value,proto3" json:"Value,omitempty"`
	ScriptPubKey string `protobuf:"bytes,2,opt,name=ScriptPubKey,json=script_pub_key,proto3" json:"ScriptPubKey,omitempty"`
}

func (x *BlockTransactionOutput) Reset() {
	*x = BlockTransactionOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockTransactionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockTransactionOutput) ProtoMessage() {}

func (x *BlockTransactionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockTransactionOutput.ProtoReflect.Descriptor instead.
func (*BlockTransactionOutput) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{3}
}

func (x *BlockTransactionOutput) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *BlockTransactionOutput) GetScriptPubKey() string {
	if x != nil {
		return x.ScriptPubKey
	}
	return ""
}

type BlockTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHash   string                    `protobuf:"bytes,1,opt,name=txHash,json=tx_hash,proto3" json:"txHash,omitempty"`
	TxInputs []*BlockTransactionInput  `protobuf:"bytes,2,rep,name=TxInputs,json=tx_inputs,proto3" json:"TxInputs,omitempty"`
	TxOuts   []*BlockTransactionOutput `protobuf:"bytes,3,rep,name=TxOuts,json=tx_outs,proto3" json:"TxOuts,omitempty"`
}

func (x *BlockTransaction) Reset() {
	*x = BlockTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockTransaction) ProtoMessage() {}

func (x *BlockTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockTransaction.ProtoReflect.Descriptor instead.
func (*BlockTransaction) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{4}
}

func (x *BlockTransaction) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *BlockTransaction) GetTxInputs() []*BlockTransactionInput {
	if x != nil {
		return x.TxInputs
	}
	return nil
}

func (x *BlockTransaction) GetTxOuts() []*BlockTransactionOutput {
	if x != nil {
		return x.TxOuts
	}
	return nil
}

type GetBlockCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetBlockCountRequest) Reset() {
	*x = GetBlockCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockCountRequest) ProtoMessage() {}

func (x *GetBlockCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockCountRequest.ProtoReflect.Descriptor instead.
func (*GetBlockCountRequest) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{5}
}

type GetBlockCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64 `protobuf:"varint,1,opt,name=Count,json=count,proto3" json:"Count,omitempty"`
}

func (x *GetBlockCountResponse) Reset() {
	*x = GetBlockCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockCountResponse) ProtoMessage() {}

func (x *GetBlockCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockCountResponse.ProtoReflect.Descriptor instead.
func (*GetBlockCountResponse) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{6}
}

func (x *GetBlockCountResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height int64 `protobuf:"varint,1,opt,name=Height,json=height,proto3" json:"Height,omitempty"`
}

func (x *GetBlockRequest) Reset() {
	*x = GetBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockRequest) ProtoMessage() {}

func (x *GetBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockRequest.ProtoReflect.Descriptor instead.
func (*GetBlockRequest) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{7}
}

func (x *GetBlockRequest) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type GetBlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *BlockHeader        `protobuf:"bytes,1,opt,name=Header,json=header,proto3" json:"Header,omitempty"`
	Tx     []*BlockTransaction `protobuf:"bytes,2,rep,name=Tx,json=tx,proto3" json:"Tx,omitempty"`
}

func (x *GetBlockResponse) Reset() {
	*x = GetBlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockResponse) ProtoMessage() {}

func (x *GetBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockResponse.ProtoReflect.Descriptor instead.
func (*GetBlockResponse) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{8}
}

func (x *GetBlockResponse) GetHeader() *BlockHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GetBlockResponse) GetTx() []*BlockTransaction {
	if x != nil {
		return x.Tx
	}
	return nil
}

type Unspent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxId         string  `protobuf:"bytes,1,opt,name=TxId,json=txid,proto3" json:"TxId,omitempty"`
	Vout         uint32  `protobuf:"varint,2,opt,name=Vout,json=vout,proto3" json:"Vout,omitempty"`
	ScriptPubKey string  `protobuf:"bytes,3,opt,name=ScriptPubKey,json=script_pub_key,proto3" json:"ScriptPubKey,omitempty"`
	Desc         string  `protobuf:"bytes,4,opt,name=Desc,json=desc,proto3" json:"Desc,omitempty"`
	Amount       float64 `protobuf:"fixed64,5,opt,name=Amount,json=amount,proto3" json:"Amount,omitempty"`
	Height       uint32  `protobuf:"varint,6,opt,name=Height,json=height,proto3" json:"Height,omitempty"`
}

func (x *Unspent) Reset() {
	*x = Unspent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Unspent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unspent) ProtoMessage() {}

func (x *Unspent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unspent.ProtoReflect.Descriptor instead.
func (*Unspent) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{9}
}

func (x *Unspent) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *Unspent) GetVout() uint32 {
	if x != nil {
		return x.Vout
	}
	return 0
}

func (x *Unspent) GetScriptPubKey() string {
	if x != nil {
		return x.ScriptPubKey
	}
	return ""
}

func (x *Unspent) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Unspent) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Unspent) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type UnspentOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHash        string  `protobuf:"bytes,1,opt,name=txHash,json=tx_hash,proto3" json:"txHash,omitempty"`
	Vout          uint32  `protobuf:"varint,2,opt,name=Vout,json=vout,proto3" json:"Vout,omitempty"`
	Address       string  `protobuf:"bytes,3,opt,name=Address,json=address,proto3" json:"Address,omitempty"`
	Account       string  `protobuf:"bytes,4,opt,name=Account,json=account,proto3" json:"Account,omitempty"`
	ScriptPubKey  string  `protobuf:"bytes,5,opt,name=ScriptPubKey,json=script_pub_key,proto3" json:"ScriptPubKey,omitempty"`
	RedeemScript  string  `protobuf:"bytes,6,opt,name=RedeemScript,json=redeem_script,proto3" json:"RedeemScript,omitempty"`
	Amount        float64 `protobuf:"fixed64,7,opt,name=Amount,json=amount,proto3" json:"Amount,omitempty"`
	Confirmations int64   `protobuf:"varint,8,opt,name=Confirmations,json=confirmations,proto3" json:"Confirmations,omitempty"`
	Spendable     bool    `protobuf:"varint,9,opt,name=Spendable,json=spendable,proto3" json:"Spendable,omitempty"`
}

func (x *UnspentOutput) Reset() {
	*x = UnspentOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnspentOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnspentOutput) ProtoMessage() {}

func (x *UnspentOutput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnspentOutput.ProtoReflect.Descriptor instead.
func (*UnspentOutput) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{10}
}

func (x *UnspentOutput) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *UnspentOutput) GetVout() uint32 {
	if x != nil {
		return x.Vout
	}
	return 0
}

func (x *UnspentOutput) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UnspentOutput) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *UnspentOutput) GetScriptPubKey() string {
	if x != nil {
		return x.ScriptPubKey
	}
	return ""
}

func (x *UnspentOutput) GetRedeemScript() string {
	if x != nil {
		return x.RedeemScript
	}
	return ""
}

func (x *UnspentOutput) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *UnspentOutput) GetConfirmations() int64 {
	if x != nil {
		return x.Confirmations
	}
	return 0
}

func (x *UnspentOutput) GetSpendable() bool {
	if x != nil {
		return x.Spendable
	}
	return false
}

type GetNewAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetNewAddressRequest) Reset() {
	*x = GetNewAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNewAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewAddressRequest) ProtoMessage() {}

func (x *GetNewAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewAddressRequest.ProtoReflect.Descriptor instead.
func (*GetNewAddressRequest) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{11}
}

type GetNewAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=Address,json=address,proto3" json:"Address,omitempty"`
}

func (x *GetNewAddressResponse) Reset() {
	*x = GetNewAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNewAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewAddressResponse) ProtoMessage() {}

func (x *GetNewAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewAddressResponse.ProtoReflect.Descriptor instead.
func (*GetNewAddressResponse) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{12}
}

func (x *GetNewAddressResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type CreateWalletRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint32 `protobuf:"varint,1,opt,name=UserId,json=user_id,proto3" json:"UserId,omitempty"`
}

func (x *CreateWalletRequest) Reset() {
	*x = CreateWalletRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWalletRequest) ProtoMessage() {}

func (x *CreateWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWalletRequest.ProtoReflect.Descriptor instead.
func (*CreateWalletRequest) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{13}
}

func (x *CreateWalletRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CreateWalletResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=Address,json=address,proto3" json:"Address,omitempty"`
}

func (x *CreateWalletResponse) Reset() {
	*x = CreateWalletResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWalletResponse) ProtoMessage() {}

func (x *CreateWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWalletResponse.ProtoReflect.Descriptor instead.
func (*CreateWalletResponse) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{14}
}

func (x *CreateWalletResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type ListUnspentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Minconf uint64 `protobuf:"varint,1,opt,name=Minconf,json=minconf,proto3" json:"Minconf,omitempty"`
	Maxconf uint64 `protobuf:"varint,2,opt,name=Maxconf,json=maxconf,proto3" json:"Maxconf,omitempty"`
	Address string `protobuf:"bytes,3,opt,name=Address,json=addresses,proto3" json:"Address,omitempty"`
}

func (x *ListUnspentRequest) Reset() {
	*x = ListUnspentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUnspentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUnspentRequest) ProtoMessage() {}

func (x *ListUnspentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUnspentRequest.ProtoReflect.Descriptor instead.
func (*ListUnspentRequest) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{15}
}

func (x *ListUnspentRequest) GetMinconf() uint64 {
	if x != nil {
		return x.Minconf
	}
	return 0
}

func (x *ListUnspentRequest) GetMaxconf() uint64 {
	if x != nil {
		return x.Maxconf
	}
	return 0
}

func (x *ListUnspentRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type ListUnspentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnspentOutputs []*UnspentOutput `protobuf:"bytes,1,rep,name=UnspentOutputs,json=unspent_outputs,proto3" json:"UnspentOutputs,omitempty"`
}

func (x *ListUnspentResponse) Reset() {
	*x = ListUnspentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUnspentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUnspentResponse) ProtoMessage() {}

func (x *ListUnspentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUnspentResponse.ProtoReflect.Descriptor instead.
func (*ListUnspentResponse) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{16}
}

func (x *ListUnspentResponse) GetUnspentOutputs() []*UnspentOutput {
	if x != nil {
		return x.UnspentOutputs
	}
	return nil
}

type GetRawTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxId string `protobuf:"bytes,1,opt,name=TxId,json=tx_id,proto3" json:"TxId,omitempty"`
}

func (x *GetRawTransactionRequest) Reset() {
	*x = GetRawTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRawTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRawTransactionRequest) ProtoMessage() {}

func (x *GetRawTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRawTransactionRequest.ProtoReflect.Descriptor instead.
func (*GetRawTransactionRequest) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{17}
}

func (x *GetRawTransactionRequest) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

type Vout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value               float64  `protobuf:"fixed64,1,opt,name=Value,json=value,proto3" json:"Value,omitempty"`
	N                   uint32   `protobuf:"varint,2,opt,name=N,json=n,proto3" json:"N,omitempty"`
	ScriptPubKeyAms     string   `protobuf:"bytes,3,opt,name=ScriptPubKeyAms,json=script_pub_key_ams,proto3" json:"ScriptPubKeyAms,omitempty"`
	ScriptPubKeyHex     string   `protobuf:"bytes,4,opt,name=ScriptPubKeyHex,json=script_pub_key_hex,proto3" json:"ScriptPubKeyHex,omitempty"`
	ScriptPubKeyReqSigs int32    `protobuf:"varint,5,opt,name=ScriptPubKeyReqSigs,json=script_pub_key_req_sigs,proto3" json:"ScriptPubKeyReqSigs,omitempty"`
	ScriptPubKeyType    string   `protobuf:"bytes,6,opt,name=ScriptPubKeyType,json=script_pub_key_type,proto3" json:"ScriptPubKeyType,omitempty"`
	Address             []string `protobuf:"bytes,7,rep,name=Address,json=address,proto3" json:"Address,omitempty"`
}

func (x *Vout) Reset() {
	*x = Vout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vout) ProtoMessage() {}

func (x *Vout) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vout.ProtoReflect.Descriptor instead.
func (*Vout) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{18}
}

func (x *Vout) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Vout) GetN() uint32 {
	if x != nil {
		return x.N
	}
	return 0
}

func (x *Vout) GetScriptPubKeyAms() string {
	if x != nil {
		return x.ScriptPubKeyAms
	}
	return ""
}

func (x *Vout) GetScriptPubKeyHex() string {
	if x != nil {
		return x.ScriptPubKeyHex
	}
	return ""
}

func (x *Vout) GetScriptPubKeyReqSigs() int32 {
	if x != nil {
		return x.ScriptPubKeyReqSigs
	}
	return 0
}

func (x *Vout) GetScriptPubKeyType() string {
	if x != nil {
		return x.ScriptPubKeyType
	}
	return ""
}

func (x *Vout) GetAddress() []string {
	if x != nil {
		return x.Address
	}
	return nil
}

type Vin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coinbase     string   `protobuf:"bytes,1,opt,name=Coinbase,json=coinbase,proto3" json:"Coinbase,omitempty"`
	TxId         string   `protobuf:"bytes,2,opt,name=TxId,json=tx_id,proto3" json:"TxId,omitempty"`
	Vout         uint32   `protobuf:"varint,3,opt,name=Vout,json=vout,proto3" json:"Vout,omitempty"`
	ScriptSigAms string   `protobuf:"bytes,4,opt,name=ScriptSigAms,json=script_sig_ams,proto3" json:"ScriptSigAms,omitempty"`
	ScriptSigHex string   `protobuf:"bytes,5,opt,name=ScriptSigHex,json=script_sig_hex,proto3" json:"ScriptSigHex,omitempty"`
	Sequence     uint32   `protobuf:"varint,6,opt,name=Sequence,json=sequence,proto3" json:"Sequence,omitempty"`
	Witness      []string `protobuf:"bytes,7,rep,name=Witness,json=witness,proto3" json:"Witness,omitempty"`
}

func (x *Vin) Reset() {
	*x = Vin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vin) ProtoMessage() {}

func (x *Vin) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vin.ProtoReflect.Descriptor instead.
func (*Vin) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{19}
}

func (x *Vin) GetCoinbase() string {
	if x != nil {
		return x.Coinbase
	}
	return ""
}

func (x *Vin) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *Vin) GetVout() uint32 {
	if x != nil {
		return x.Vout
	}
	return 0
}

func (x *Vin) GetScriptSigAms() string {
	if x != nil {
		return x.ScriptSigAms
	}
	return ""
}

func (x *Vin) GetScriptSigHex() string {
	if x != nil {
		return x.ScriptSigHex
	}
	return ""
}

func (x *Vin) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *Vin) GetWitness() []string {
	if x != nil {
		return x.Witness
	}
	return nil
}

type GetRawTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hex           string  `protobuf:"bytes,1,opt,name=Hex,json=hex,proto3" json:"Hex,omitempty"`
	TxId          string  `protobuf:"bytes,2,opt,name=TxId,json=tx_id,proto3" json:"TxId,omitempty"`
	Hash          string  `protobuf:"bytes,3,opt,name=Hash,json=hash,proto3" json:"Hash,omitempty"`
	Size          int32   `protobuf:"varint,4,opt,name=Size,json=size,proto3" json:"Size,omitempty"`
	Vsize         int32   `protobuf:"varint,5,opt,name=Vsize,json=vsize,proto3" json:"Vsize,omitempty"`
	Weight        int32   `protobuf:"varint,6,opt,name=Weight,json=weight,proto3" json:"Weight,omitempty"`
	Version       uint32  `protobuf:"varint,7,opt,name=Version,json=version,proto3" json:"Version,omitempty"`
	LockTime      uint32  `protobuf:"varint,8,opt,name=LockTime,json=lockTime,proto3" json:"LockTime,omitempty"`
	Vin           []*Vin  `protobuf:"bytes,9,rep,name=Vin,json=vin,proto3" json:"Vin,omitempty"`
	Vout          []*Vout `protobuf:"bytes,10,rep,name=Vout,json=vout,proto3" json:"Vout,omitempty"`
	BlockHash     string  `protobuf:"bytes,11,opt,name=BlockHash,json=blockHash,proto3" json:"BlockHash,omitempty"`
	Confirmations uint64  `protobuf:"varint,12,opt,name=Confirmations,json=confirmations,proto3" json:"Confirmations,omitempty"`
	Time          int64   `protobuf:"varint,13,opt,name=Time,json=time,proto3" json:"Time,omitempty"`
	BlockTime     int64   `protobuf:"varint,14,opt,name=BlockTime,json=block_time,proto3" json:"BlockTime,omitempty"`
}

func (x *GetRawTransactionResponse) Reset() {
	*x = GetRawTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRawTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRawTransactionResponse) ProtoMessage() {}

func (x *GetRawTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRawTransactionResponse.ProtoReflect.Descriptor instead.
func (*GetRawTransactionResponse) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{20}
}

func (x *GetRawTransactionResponse) GetHex() string {
	if x != nil {
		return x.Hex
	}
	return ""
}

func (x *GetRawTransactionResponse) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *GetRawTransactionResponse) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *GetRawTransactionResponse) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetRawTransactionResponse) GetVsize() int32 {
	if x != nil {
		return x.Vsize
	}
	return 0
}

func (x *GetRawTransactionResponse) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *GetRawTransactionResponse) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GetRawTransactionResponse) GetLockTime() uint32 {
	if x != nil {
		return x.LockTime
	}
	return 0
}

func (x *GetRawTransactionResponse) GetVin() []*Vin {
	if x != nil {
		return x.Vin
	}
	return nil
}

func (x *GetRawTransactionResponse) GetVout() []*Vout {
	if x != nil {
		return x.Vout
	}
	return nil
}

func (x *GetRawTransactionResponse) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *GetRawTransactionResponse) GetConfirmations() uint64 {
	if x != nil {
		return x.Confirmations
	}
	return 0
}

func (x *GetRawTransactionResponse) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *GetRawTransactionResponse) GetBlockTime() int64 {
	if x != nil {
		return x.BlockTime
	}
	return 0
}

type TransactionInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxId string `protobuf:"bytes,1,opt,name=TxId,json=tx_id,proto3" json:"TxId,omitempty"`
	Vout int32  `protobuf:"varint,2,opt,name=Vout,json=vout,proto3" json:"Vout,omitempty"`
}

func (x *TransactionInput) Reset() {
	*x = TransactionInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionInput) ProtoMessage() {}

func (x *TransactionInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionInput.ProtoReflect.Descriptor instead.
func (*TransactionInput) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{21}
}

func (x *TransactionInput) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *TransactionInput) GetVout() int32 {
	if x != nil {
		return x.Vout
	}
	return 0
}

type TransactionOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string  `protobuf:"bytes,1,opt,name=Address,json=address,proto3" json:"Address,omitempty"`
	Value   float64 `protobuf:"fixed64,2,opt,name=Value,json=value,proto3" json:"Value,omitempty"`
}

func (x *TransactionOutput) Reset() {
	*x = TransactionOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionOutput) ProtoMessage() {}

func (x *TransactionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionOutput.ProtoReflect.Descriptor instead.
func (*TransactionOutput) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{22}
}

func (x *TransactionOutput) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *TransactionOutput) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type OutPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash  string `protobuf:"bytes,1,opt,name=Hash,json=hash,proto3" json:"Hash,omitempty"`
	Index uint32 `protobuf:"varint,2,opt,name=Index,json=index,proto3" json:"Index,omitempty"`
}

func (x *OutPoint) Reset() {
	*x = OutPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutPoint) ProtoMessage() {}

func (x *OutPoint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutPoint.ProtoReflect.Descriptor instead.
func (*OutPoint) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{23}
}

func (x *OutPoint) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *OutPoint) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type TxIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PreviousOutpoint *OutPoint `protobuf:"bytes,1,opt,name=PreviousOutpoint,json=previous_outpoint,proto3" json:"PreviousOutpoint,omitempty"`
	SignatureScript  string    `protobuf:"bytes,2,opt,name=SignatureScript,json=signature_script,proto3" json:"SignatureScript,omitempty"`
	Sequence         uint32    `protobuf:"varint,3,opt,name=Sequence,json=sequence,proto3" json:"Sequence,omitempty"`
}

func (x *TxIn) Reset() {
	*x = TxIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxIn) ProtoMessage() {}

func (x *TxIn) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxIn.ProtoReflect.Descriptor instead.
func (*TxIn) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{24}
}

func (x *TxIn) GetPreviousOutpoint() *OutPoint {
	if x != nil {
		return x.PreviousOutpoint
	}
	return nil
}

func (x *TxIn) GetSignatureScript() string {
	if x != nil {
		return x.SignatureScript
	}
	return ""
}

func (x *TxIn) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

type TxOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value        int64  `protobuf:"varint,1,opt,name=Value,json=value,proto3" json:"Value,omitempty"`
	ScriptPubKey string `protobuf:"bytes,2,opt,name=ScriptPubKey,json=script_pub_key,proto3" json:"ScriptPubKey,omitempty"`
}

func (x *TxOut) Reset() {
	*x = TxOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxOut) ProtoMessage() {}

func (x *TxOut) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxOut.ProtoReflect.Descriptor instead.
func (*TxOut) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{25}
}

func (x *TxOut) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *TxOut) GetScriptPubKey() string {
	if x != nil {
		return x.ScriptPubKey
	}
	return ""
}

type CreateRawTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inputs  []*TransactionInput  `protobuf:"bytes,1,rep,name=Inputs,json=inputs,proto3" json:"Inputs,omitempty"`
	Outputs []*TransactionOutput `protobuf:"bytes,2,rep,name=Outputs,json=outputs,proto3" json:"Outputs,omitempty"`
}

func (x *CreateRawTransactionRequest) Reset() {
	*x = CreateRawTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRawTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRawTransactionRequest) ProtoMessage() {}

func (x *CreateRawTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRawTransactionRequest.ProtoReflect.Descriptor instead.
func (*CreateRawTransactionRequest) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{26}
}

func (x *CreateRawTransactionRequest) GetInputs() []*TransactionInput {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *CreateRawTransactionRequest) GetOutputs() []*TransactionOutput {
	if x != nil {
		return x.Outputs
	}
	return nil
}

type CreateRawTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RawHex   string `protobuf:"bytes,1,opt,name=RawHex,json=raw_hex,proto3" json:"RawHex,omitempty"`
	SignedTx string `protobuf:"bytes,2,opt,name=SignedTx,json=signed_tx,proto3" json:"SignedTx,omitempty"`
}

func (x *CreateRawTransactionResponse) Reset() {
	*x = CreateRawTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRawTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRawTransactionResponse) ProtoMessage() {}

func (x *CreateRawTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRawTransactionResponse.ProtoReflect.Descriptor instead.
func (*CreateRawTransactionResponse) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{27}
}

func (x *CreateRawTransactionResponse) GetRawHex() string {
	if x != nil {
		return x.RawHex
	}
	return ""
}

func (x *CreateRawTransactionResponse) GetSignedTx() string {
	if x != nil {
		return x.SignedTx
	}
	return ""
}

//	message CreateRawTransactionResponse {
//	 repeated TxIn TxIn = 1 [json_name = "tx_in"];
//	 repeated TxOut TxOut = 2 [json_name = "tx_out"];
//	 int32 Version = 3 [json_name = "version"];
//	 uint32 LockTime = 4 [json_name = "lock_time"];
//	}
type SignRawTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RawTx        string   `protobuf:"bytes,1,opt,name=RawTx,json=raw_tx,proto3" json:"RawTx,omitempty"`
	PrivateKeys  []string `protobuf:"bytes,2,rep,name=PrivateKeys,json=private_keys,proto3" json:"PrivateKeys,omitempty"`
	RedeemScript string   `protobuf:"bytes,3,opt,name=RedeemScript,json=redeem_script,proto3" json:"RedeemScript,omitempty"`
}

func (x *SignRawTransactionRequest) Reset() {
	*x = SignRawTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignRawTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignRawTransactionRequest) ProtoMessage() {}

func (x *SignRawTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignRawTransactionRequest.ProtoReflect.Descriptor instead.
func (*SignRawTransactionRequest) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{28}
}

func (x *SignRawTransactionRequest) GetRawTx() string {
	if x != nil {
		return x.RawTx
	}
	return ""
}

func (x *SignRawTransactionRequest) GetPrivateKeys() []string {
	if x != nil {
		return x.PrivateKeys
	}
	return nil
}

func (x *SignRawTransactionRequest) GetRedeemScript() string {
	if x != nil {
		return x.RedeemScript
	}
	return ""
}

type SignRawTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignedTx string `protobuf:"bytes,1,opt,name=SignedTx,json=signed_tx,proto3" json:"SignedTx,omitempty"`
	Complete bool   `protobuf:"varint,2,opt,name=Complete,json=complete,proto3" json:"Complete,omitempty"`
}

func (x *SignRawTransactionResponse) Reset() {
	*x = SignRawTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignRawTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignRawTransactionResponse) ProtoMessage() {}

func (x *SignRawTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignRawTransactionResponse.ProtoReflect.Descriptor instead.
func (*SignRawTransactionResponse) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{29}
}

func (x *SignRawTransactionResponse) GetSignedTx() string {
	if x != nil {
		return x.SignedTx
	}
	return ""
}

func (x *SignRawTransactionResponse) GetComplete() bool {
	if x != nil {
		return x.Complete
	}
	return false
}

type SendRawTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignedTx string `protobuf:"bytes,1,opt,name=SignedTx,json=signed_tx,proto3" json:"SignedTx,omitempty"`
}

func (x *SendRawTransactionRequest) Reset() {
	*x = SendRawTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendRawTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRawTransactionRequest) ProtoMessage() {}

func (x *SendRawTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRawTransactionRequest.ProtoReflect.Descriptor instead.
func (*SendRawTransactionRequest) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{30}
}

func (x *SendRawTransactionRequest) GetSignedTx() string {
	if x != nil {
		return x.SignedTx
	}
	return ""
}

type SendRawTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxId string `protobuf:"bytes,1,opt,name=TxId,json=tx_id,proto3" json:"TxId,omitempty"`
}

func (x *SendRawTransactionResponse) Reset() {
	*x = SendRawTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendRawTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRawTransactionResponse) ProtoMessage() {}

func (x *SendRawTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRawTransactionResponse.ProtoReflect.Descriptor instead.
func (*SendRawTransactionResponse) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{31}
}

func (x *SendRawTransactionResponse) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

type SendToAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToAddress string  `protobuf:"bytes,1,opt,name=ToAddress,json=to_address,proto3" json:"ToAddress,omitempty"`
	Amount    float64 `protobuf:"fixed64,2,opt,name=Amount,json=amount,proto3" json:"Amount,omitempty"`
}

func (x *SendToAddressRequest) Reset() {
	*x = SendToAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendToAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendToAddressRequest) ProtoMessage() {}

func (x *SendToAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendToAddressRequest.ProtoReflect.Descriptor instead.
func (*SendToAddressRequest) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{32}
}

func (x *SendToAddressRequest) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *SendToAddressRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type SendToAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHash string `protobuf:"bytes,1,opt,name=TxHash,json=tx_hash,proto3" json:"TxHash,omitempty"`
}

func (x *SendToAddressResponse) Reset() {
	*x = SendToAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendToAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendToAddressResponse) ProtoMessage() {}

func (x *SendToAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendToAddressResponse.ProtoReflect.Descriptor instead.
func (*SendToAddressResponse) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{33}
}

func (x *SendToAddressResponse) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

type GetPrivateKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint32 `protobuf:"varint,1,opt,name=UserId,json=user_id,proto3" json:"UserId,omitempty"`
}

func (x *GetPrivateKeyRequest) Reset() {
	*x = GetPrivateKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPrivateKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrivateKeyRequest) ProtoMessage() {}

func (x *GetPrivateKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrivateKeyRequest.ProtoReflect.Descriptor instead.
func (*GetPrivateKeyRequest) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{34}
}

func (x *GetPrivateKeyRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetPrivateKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrivateKey string `protobuf:"bytes,1,opt,name=PrivateKey,json=private_key,proto3" json:"PrivateKey,omitempty"`
}

func (x *GetPrivateKeyResponse) Reset() {
	*x = GetPrivateKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPrivateKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrivateKeyResponse) ProtoMessage() {}

func (x *GetPrivateKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrivateKeyResponse.ProtoReflect.Descriptor instead.
func (*GetPrivateKeyResponse) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{35}
}

func (x *GetPrivateKeyResponse) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

type GetAddressUTXORequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=Address,json=address,proto3" json:"Address,omitempty"`
}

func (x *GetAddressUTXORequest) Reset() {
	*x = GetAddressUTXORequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAddressUTXORequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddressUTXORequest) ProtoMessage() {}

func (x *GetAddressUTXORequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddressUTXORequest.ProtoReflect.Descriptor instead.
func (*GetAddressUTXORequest) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{36}
}

func (x *GetAddressUTXORequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type GetAddressUTXOResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success     bool       `protobuf:"varint,1,opt,name=Success,json=success,proto3" json:"Success,omitempty"`
	Txouts      uint32     `protobuf:"varint,2,opt,name=Txouts,json=txouts,proto3" json:"Txouts,omitempty"`
	Height      uint32     `protobuf:"varint,3,opt,name=Height,json=height,proto3" json:"Height,omitempty"`
	BestBlock   string     `protobuf:"bytes,4,opt,name=BestBlock,json=best_block,proto3" json:"BestBlock,omitempty"`
	Unspents    []*Unspent `protobuf:"bytes,5,rep,name=Unspents,proto3" json:"Unspents,omitempty"`
	TotalAmount float64    `protobuf:"fixed64,6,opt,name=TotalAmount,json=total_amount,proto3" json:"TotalAmount,omitempty"`
}

func (x *GetAddressUTXOResponse) Reset() {
	*x = GetAddressUTXOResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAddressUTXOResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddressUTXOResponse) ProtoMessage() {}

func (x *GetAddressUTXOResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_proxy_proxy_bitcoin_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddressUTXOResponse.ProtoReflect.Descriptor instead.
func (*GetAddressUTXOResponse) Descriptor() ([]byte, []int) {
	return file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP(), []int{37}
}

func (x *GetAddressUTXOResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetAddressUTXOResponse) GetTxouts() uint32 {
	if x != nil {
		return x.Txouts
	}
	return 0
}

func (x *GetAddressUTXOResponse) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *GetAddressUTXOResponse) GetBestBlock() string {
	if x != nil {
		return x.BestBlock
	}
	return ""
}

func (x *GetAddressUTXOResponse) GetUnspents() []*Unspent {
	if x != nil {
		return x.Unspents
	}
	return nil
}

func (x *GetAddressUTXOResponse) GetTotalAmount() float64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

var File_proto_proxy_proxy_bitcoin_proto protoreflect.FileDescriptor

var file_proto_proxy_proxy_bitcoin_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0d, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x22, 0xaf, 0x01, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x09, 0x50, 0x72,
	0x65, 0x76, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x72, 0x65, 0x76, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1f, 0x0a, 0x0a, 0x4d, 0x65, 0x72,
	0x6b, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d,
	0x65, 0x72, 0x6b, 0x6c, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x42, 0x69, 0x74, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x62, 0x69, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x22, 0x39, 0x0a, 0x0d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xaa, 0x01,
	0x0a, 0x15, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x4a, 0x0a, 0x10, 0x50, 0x72, 0x65, 0x76, 0x69,
	0x6f, 0x75, 0x73, 0x4f, 0x75, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x12, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x0f, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x54, 0x0a, 0x16, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x24, 0x0a, 0x0c, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79,
	0x22, 0xae, 0x01, 0x0a, 0x10, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x12, 0x41,
	0x0a, 0x08, 0x54, 0x78, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x09, 0x74, 0x78, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x73, 0x12, 0x3e, 0x0a, 0x06, 0x54, 0x78, 0x4f, 0x75, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x07, 0x74, 0x78, 0x5f, 0x6f, 0x75, 0x74,
	0x73, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2d, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x29, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x22, 0x77, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69,
	0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x02, 0x54,
	0x78, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69,
	0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x02, 0x74, 0x78, 0x22, 0x9b, 0x01, 0x0a,
	0x07, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x78, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x56, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x76, 0x6f, 0x75, 0x74,
	0x12, 0x24, 0x0a, 0x0c, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x70,
	0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x97, 0x02, 0x0a, 0x0d, 0x55,
	0x6e, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x06,
	0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x78,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x56, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x76, 0x6f, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a,
	0x0c, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x70, 0x75, 0x62, 0x5f,
	0x6b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x0c, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x53, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x64, 0x65, 0x65,
	0x6d, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x70, 0x65, 0x6e, 0x64,
	0x61, 0x62, 0x6c, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x31, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0x2e, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x22,
	0x30, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x64, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x69, 0x6e, 0x63, 0x6f,
	0x6e, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x63, 0x6f, 0x6e,
	0x66, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x61, 0x78, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x63, 0x6f, 0x6e, 0x66, 0x12, 0x1a, 0x0a, 0x07, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x5c, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x55,
	0x6e, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45,
	0x0a, 0x0e, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e,
	0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x52, 0x0f, 0x75, 0x6e, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x73, 0x22, 0x2f, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x52, 0x61, 0x77, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x13, 0x0a, 0x04, 0x54, 0x78, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x22, 0x83, 0x02, 0x0a, 0x04, 0x56, 0x6f, 0x75, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x4e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x01, 0x6e, 0x12, 0x2b, 0x0a, 0x0f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x50, 0x75, 0x62,
	0x4b, 0x65, 0x79, 0x41, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x5f, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x61, 0x6d, 0x73,
	0x12, 0x2b, 0x0a, 0x0f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79,
	0x48, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x5f, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x68, 0x65, 0x78, 0x12, 0x34, 0x0a,
	0x13, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71,
	0x53, 0x69, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x5f, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x73,
	0x69, 0x67, 0x73, 0x12, 0x2d, 0x0a, 0x10, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x50, 0x75, 0x62,
	0x4b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xcc, 0x01, 0x0a,
	0x03, 0x56, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65,
	0x12, 0x13, 0x0a, 0x04, 0x54, 0x78, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x78, 0x5f, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x56, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x76, 0x6f, 0x75, 0x74, 0x12, 0x24, 0x0a, 0x0c, 0x53, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x53, 0x69, 0x67, 0x41, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x5f, 0x61, 0x6d, 0x73, 0x12,
	0x24, 0x0a, 0x0c, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x53, 0x69, 0x67, 0x48, 0x65, 0x78, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x73, 0x69,
	0x67, 0x5f, 0x68, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x57, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x77, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x22, 0x94, 0x03, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x52, 0x61, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x48, 0x65, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x68, 0x65, 0x78, 0x12, 0x13, 0x0a, 0x04, 0x54,
	0x78, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x78, 0x5f, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x03,
	0x56, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x69, 0x74, 0x63,
	0x6f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x56, 0x69, 0x6e, 0x52, 0x03, 0x76,
	0x69, 0x6e, 0x12, 0x27, 0x0a, 0x04, 0x56, 0x6f, 0x75, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x56, 0x6f, 0x75, 0x74, 0x52, 0x04, 0x76, 0x6f, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x22, 0x3b, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x13, 0x0a, 0x04, 0x54, 0x78, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x56,
	0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x76, 0x6f, 0x75, 0x74, 0x22,
	0x43, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x34, 0x0a, 0x08, 0x4f, 0x75, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x93, 0x01, 0x0a, 0x04, 0x54,
	0x78, 0x49, 0x6e, 0x12, 0x44, 0x0a, 0x10, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x4f,
	0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x62, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4f, 0x75,
	0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x11, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73,
	0x5f, 0x6f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x0f, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x22, 0x43, 0x0a, 0x05, 0x54, 0x78, 0x4f, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x24, 0x0a, 0x0c, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x70, 0x75,
	0x62, 0x5f, 0x6b, 0x65, 0x79, 0x22, 0x92, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x61, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x06, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x5f,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x3a,
	0x0a, 0x07, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x22, 0x54, 0x0a, 0x1c, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x61, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x06, 0x52, 0x61,
	0x77, 0x48, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x61, 0x77, 0x5f,
	0x68, 0x65, 0x78, 0x12, 0x1b, 0x0a, 0x08, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x74, 0x78,
	0x22, 0x7a, 0x0a, 0x19, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x61, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a,
	0x05, 0x52, 0x61, 0x77, 0x54, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x61,
	0x77, 0x5f, 0x74, 0x78, 0x12, 0x21, 0x0a, 0x0b, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b,
	0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x23, 0x0a, 0x0c, 0x52, 0x65, 0x64, 0x65, 0x65,
	0x6d, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72,
	0x65, 0x64, 0x65, 0x65, 0x6d, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x22, 0x55, 0x0a, 0x1a,
	0x53, 0x69, 0x67, 0x6e, 0x52, 0x61, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x08, 0x53, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x54, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x5f, 0x74, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x22, 0x38, 0x0a, 0x19, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x61, 0x77, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x08, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x74, 0x78, 0x22, 0x31, 0x0a,
	0x1a, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x61, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x13, 0x0a, 0x04, 0x54,
	0x78, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x78, 0x5f, 0x69, 0x64,
	0x22, 0x4d, 0x0a, 0x14, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x54, 0x6f, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x30, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x06, 0x54, 0x78, 0x48, 0x61,
	0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x22, 0x2f, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x22, 0x38, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x22, 0x31, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x55, 0x54, 0x58, 0x4f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0xd8, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x55, 0x54,
	0x58, 0x4f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x78, 0x6f, 0x75, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x78, 0x6f, 0x75, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x42, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x65, 0x73, 0x74, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x32, 0x0a, 0x08, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x5f,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x55,
	0x6e, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0x8f, 0x09, 0x0a, 0x0c, 0x42,
	0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x5a, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x62,
	0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x1e, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x61, 0x77, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x62, 0x69, 0x74, 0x63,
	0x6f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x61, 0x77,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x61, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x14,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x61, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x61, 0x77, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2b, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x61, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a,
	0x0b, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x62,
	0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x12, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x61, 0x77, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x62, 0x69, 0x74, 0x63,
	0x6f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x61,
	0x77, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x61, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69,
	0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x61, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x61, 0x77, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x52, 0x61, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0d, 0x53, 0x65, 0x6e,
	0x64, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x2e, 0x62, 0x69, 0x74,
	0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54,
	0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x22, 0x2e, 0x62,
	0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e,
	0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x62, 0x69,
	0x74, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x4e,
	0x65, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5a, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b,
	0x65, 0x79, 0x12, 0x23, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69,
	0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x55, 0x54, 0x58, 0x4f, 0x12,
	0x24, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x55, 0x54, 0x58, 0x4f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x5f,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x55, 0x54, 0x58, 0x4f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x11, 0x5a, 0x0f,
	0x2e, 0x2f, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_proxy_proxy_bitcoin_proto_rawDescOnce sync.Once
	file_proto_proxy_proxy_bitcoin_proto_rawDescData = file_proto_proxy_proxy_bitcoin_proto_rawDesc
)

func file_proto_proxy_proxy_bitcoin_proto_rawDescGZIP() []byte {
	file_proto_proxy_proxy_bitcoin_proto_rawDescOnce.Do(func() {
		file_proto_proxy_proxy_bitcoin_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_proxy_proxy_bitcoin_proto_rawDescData)
	})
	return file_proto_proxy_proxy_bitcoin_proto_rawDescData
}

var file_proto_proxy_proxy_bitcoin_proto_msgTypes = make([]protoimpl.MessageInfo, 38)
var file_proto_proxy_proxy_bitcoin_proto_goTypes = []interface{}{
	(*BlockHeader)(nil),                  // 0: bitcoin_proxy.BlockHeader
	(*BlockOutPoint)(nil),                // 1: bitcoin_proxy.BlockOutPoint
	(*BlockTransactionInput)(nil),        // 2: bitcoin_proxy.BlockTransactionInput
	(*BlockTransactionOutput)(nil),       // 3: bitcoin_proxy.BlockTransactionOutput
	(*BlockTransaction)(nil),             // 4: bitcoin_proxy.BlockTransaction
	(*GetBlockCountRequest)(nil),         // 5: bitcoin_proxy.GetBlockCountRequest
	(*GetBlockCountResponse)(nil),        // 6: bitcoin_proxy.GetBlockCountResponse
	(*GetBlockRequest)(nil),              // 7: bitcoin_proxy.GetBlockRequest
	(*GetBlockResponse)(nil),             // 8: bitcoin_proxy.GetBlockResponse
	(*Unspent)(nil),                      // 9: bitcoin_proxy.Unspent
	(*UnspentOutput)(nil),                // 10: bitcoin_proxy.UnspentOutput
	(*GetNewAddressRequest)(nil),         // 11: bitcoin_proxy.GetNewAddressRequest
	(*GetNewAddressResponse)(nil),        // 12: bitcoin_proxy.GetNewAddressResponse
	(*CreateWalletRequest)(nil),          // 13: bitcoin_proxy.CreateWalletRequest
	(*CreateWalletResponse)(nil),         // 14: bitcoin_proxy.CreateWalletResponse
	(*ListUnspentRequest)(nil),           // 15: bitcoin_proxy.ListUnspentRequest
	(*ListUnspentResponse)(nil),          // 16: bitcoin_proxy.ListUnspentResponse
	(*GetRawTransactionRequest)(nil),     // 17: bitcoin_proxy.GetRawTransactionRequest
	(*Vout)(nil),                         // 18: bitcoin_proxy.Vout
	(*Vin)(nil),                          // 19: bitcoin_proxy.Vin
	(*GetRawTransactionResponse)(nil),    // 20: bitcoin_proxy.GetRawTransactionResponse
	(*TransactionInput)(nil),             // 21: bitcoin_proxy.TransactionInput
	(*TransactionOutput)(nil),            // 22: bitcoin_proxy.TransactionOutput
	(*OutPoint)(nil),                     // 23: bitcoin_proxy.OutPoint
	(*TxIn)(nil),                         // 24: bitcoin_proxy.TxIn
	(*TxOut)(nil),                        // 25: bitcoin_proxy.TxOut
	(*CreateRawTransactionRequest)(nil),  // 26: bitcoin_proxy.CreateRawTransactionRequest
	(*CreateRawTransactionResponse)(nil), // 27: bitcoin_proxy.CreateRawTransactionResponse
	(*SignRawTransactionRequest)(nil),    // 28: bitcoin_proxy.SignRawTransactionRequest
	(*SignRawTransactionResponse)(nil),   // 29: bitcoin_proxy.SignRawTransactionResponse
	(*SendRawTransactionRequest)(nil),    // 30: bitcoin_proxy.SendRawTransactionRequest
	(*SendRawTransactionResponse)(nil),   // 31: bitcoin_proxy.SendRawTransactionResponse
	(*SendToAddressRequest)(nil),         // 32: bitcoin_proxy.SendToAddressRequest
	(*SendToAddressResponse)(nil),        // 33: bitcoin_proxy.SendToAddressResponse
	(*GetPrivateKeyRequest)(nil),         // 34: bitcoin_proxy.GetPrivateKeyRequest
	(*GetPrivateKeyResponse)(nil),        // 35: bitcoin_proxy.GetPrivateKeyResponse
	(*GetAddressUTXORequest)(nil),        // 36: bitcoin_proxy.GetAddressUTXORequest
	(*GetAddressUTXOResponse)(nil),       // 37: bitcoin_proxy.GetAddressUTXOResponse
}
var file_proto_proxy_proxy_bitcoin_proto_depIdxs = []int32{
	1,  // 0: bitcoin_proxy.BlockTransactionInput.PreviousOutPoint:type_name -> bitcoin_proxy.BlockOutPoint
	2,  // 1: bitcoin_proxy.BlockTransaction.TxInputs:type_name -> bitcoin_proxy.BlockTransactionInput
	3,  // 2: bitcoin_proxy.BlockTransaction.TxOuts:type_name -> bitcoin_proxy.BlockTransactionOutput
	0,  // 3: bitcoin_proxy.GetBlockResponse.Header:type_name -> bitcoin_proxy.BlockHeader
	4,  // 4: bitcoin_proxy.GetBlockResponse.Tx:type_name -> bitcoin_proxy.BlockTransaction
	10, // 5: bitcoin_proxy.ListUnspentResponse.UnspentOutputs:type_name -> bitcoin_proxy.UnspentOutput
	19, // 6: bitcoin_proxy.GetRawTransactionResponse.Vin:type_name -> bitcoin_proxy.Vin
	18, // 7: bitcoin_proxy.GetRawTransactionResponse.Vout:type_name -> bitcoin_proxy.Vout
	23, // 8: bitcoin_proxy.TxIn.PreviousOutpoint:type_name -> bitcoin_proxy.OutPoint
	21, // 9: bitcoin_proxy.CreateRawTransactionRequest.Inputs:type_name -> bitcoin_proxy.TransactionInput
	22, // 10: bitcoin_proxy.CreateRawTransactionRequest.Outputs:type_name -> bitcoin_proxy.TransactionOutput
	9,  // 11: bitcoin_proxy.GetAddressUTXOResponse.Unspents:type_name -> bitcoin_proxy.Unspent
	5,  // 12: bitcoin_proxy.BitcoinProxy.GetBlockCount:input_type -> bitcoin_proxy.GetBlockCountRequest
	7,  // 13: bitcoin_proxy.BitcoinProxy.GetBlock:input_type -> bitcoin_proxy.GetBlockRequest
	17, // 14: bitcoin_proxy.BitcoinProxy.GetRawTransaction:input_type -> bitcoin_proxy.GetRawTransactionRequest
	26, // 15: bitcoin_proxy.BitcoinProxy.CreateRawTransaction:input_type -> bitcoin_proxy.CreateRawTransactionRequest
	15, // 16: bitcoin_proxy.BitcoinProxy.ListUnspent:input_type -> bitcoin_proxy.ListUnspentRequest
	28, // 17: bitcoin_proxy.BitcoinProxy.SignRawTransaction:input_type -> bitcoin_proxy.SignRawTransactionRequest
	30, // 18: bitcoin_proxy.BitcoinProxy.SendRawTransaction:input_type -> bitcoin_proxy.SendRawTransactionRequest
	32, // 19: bitcoin_proxy.BitcoinProxy.SendToAddress:input_type -> bitcoin_proxy.SendToAddressRequest
	13, // 20: bitcoin_proxy.BitcoinProxy.CreateWalletAddress:input_type -> bitcoin_proxy.CreateWalletRequest
	11, // 21: bitcoin_proxy.BitcoinProxy.GetNewAddress:input_type -> bitcoin_proxy.GetNewAddressRequest
	34, // 22: bitcoin_proxy.BitcoinProxy.GetPrivateKey:input_type -> bitcoin_proxy.GetPrivateKeyRequest
	36, // 23: bitcoin_proxy.BitcoinProxy.GetAddressUTXO:input_type -> bitcoin_proxy.GetAddressUTXORequest
	6,  // 24: bitcoin_proxy.BitcoinProxy.GetBlockCount:output_type -> bitcoin_proxy.GetBlockCountResponse
	8,  // 25: bitcoin_proxy.BitcoinProxy.GetBlock:output_type -> bitcoin_proxy.GetBlockResponse
	20, // 26: bitcoin_proxy.BitcoinProxy.GetRawTransaction:output_type -> bitcoin_proxy.GetRawTransactionResponse
	27, // 27: bitcoin_proxy.BitcoinProxy.CreateRawTransaction:output_type -> bitcoin_proxy.CreateRawTransactionResponse
	16, // 28: bitcoin_proxy.BitcoinProxy.ListUnspent:output_type -> bitcoin_proxy.ListUnspentResponse
	29, // 29: bitcoin_proxy.BitcoinProxy.SignRawTransaction:output_type -> bitcoin_proxy.SignRawTransactionResponse
	31, // 30: bitcoin_proxy.BitcoinProxy.SendRawTransaction:output_type -> bitcoin_proxy.SendRawTransactionResponse
	33, // 31: bitcoin_proxy.BitcoinProxy.SendToAddress:output_type -> bitcoin_proxy.SendToAddressResponse
	14, // 32: bitcoin_proxy.BitcoinProxy.CreateWalletAddress:output_type -> bitcoin_proxy.CreateWalletResponse
	12, // 33: bitcoin_proxy.BitcoinProxy.GetNewAddress:output_type -> bitcoin_proxy.GetNewAddressResponse
	35, // 34: bitcoin_proxy.BitcoinProxy.GetPrivateKey:output_type -> bitcoin_proxy.GetPrivateKeyResponse
	37, // 35: bitcoin_proxy.BitcoinProxy.GetAddressUTXO:output_type -> bitcoin_proxy.GetAddressUTXOResponse
	24, // [24:36] is the sub-list for method output_type
	12, // [12:24] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_proto_proxy_proxy_bitcoin_proto_init() }
func file_proto_proxy_proxy_bitcoin_proto_init() {
	if File_proto_proxy_proxy_bitcoin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockOutPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockTransactionInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockTransactionOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Unspent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnspentOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNewAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNewAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWalletRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWalletResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUnspentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUnspentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRawTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRawTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRawTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRawTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignRawTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignRawTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendRawTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendRawTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendToAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendToAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPrivateKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPrivateKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAddressUTXORequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_proxy_proxy_bitcoin_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAddressUTXOResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_proxy_proxy_bitcoin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   38,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_proxy_proxy_bitcoin_proto_goTypes,
		DependencyIndexes: file_proto_proxy_proxy_bitcoin_proto_depIdxs,
		MessageInfos:      file_proto_proxy_proxy_bitcoin_proto_msgTypes,
	}.Build()
	File_proto_proxy_proxy_bitcoin_proto = out.File
	file_proto_proxy_proxy_bitcoin_proto_rawDesc = nil
	file_proto_proxy_proxy_bitcoin_proto_goTypes = nil
	file_proto_proxy_proxy_bitcoin_proto_depIdxs = nil
}
