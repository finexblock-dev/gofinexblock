syntax = "proto3";
package grpc_order;
option go_package = "./grpc_order";

import "proto/message.proto";

service MarketOrder {
  rpc MarketOrderInit(MarketOrderInput) returns (Ack);
}

service LimitOrder {
  rpc LimitOrderInit(LimitOrderInput) returns (Ack);
}

service CancelOrder {
  rpc CancelOrder(OrderCancellation) returns (Ack);
}


service Event {
  rpc OrderPlacementEvent(OrderPlacement) returns (Ack);
  rpc OrderPlacementFailedEvent(OrderPlacementFailed) returns (Ack);
  rpc OrderCancellationEvent(OrderCancelled) returns (Ack);
  rpc OrderCancellationFailedEvent(OrderCancellationFailed) returns (Ack);
  rpc OrderMatchingEvent (OrderMatching) returns (Ack);
  rpc OrderMatchingFailedEvent (OrderMatchingFailed) returns (Ack);
  rpc OrderPartialFillEvent (OrderPartialFill) returns (Ack);
  rpc OrderFulfillmentEvent (OrderFulfillment) returns (Ack);
  rpc OrderInitializeEvent (OrderInitialize) returns (Ack);
  rpc BalanceUpdateEvent (BalanceUpdate) returns (Ack);
}

service OrderBook {
  rpc GetOrderBook(GetOrderBookInput) returns(GetOrderBookOutput);
  rpc PushOrderBook(PushOrderBookInput) returns (Ack);
}