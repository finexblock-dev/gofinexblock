syntax = "proto3";
package proxy;
option go_package = "./proxy";

import "proto/bitcoin/hdwallet.message.proto";
import "proto/bitcoin/transaction.message.proto";
import "proto/ethereum/hdwallet.message.proto";
import "proto/ethereum/transaction.message.proto";
import "proto/polygon/hdwallet.message.proto";
import "proto/polygon/transaction.message.proto";

service BitcoinProxy {
  rpc GetRawTransaction(bitcoin.GetRawTransactionInput) returns (bitcoin.GetRawTransactionOutput);
  rpc ListUnspent(bitcoin.ListUnspentInput) returns (bitcoin.ListUnspentOutput);
  rpc SendToAddress(bitcoin.SendToAddressInput) returns (bitcoin.SendToAddressOutput);
  rpc GetNewAddress(bitcoin.GetNewAddressInput) returns (bitcoin.GetNewAddressOutput);
}

service PolygonProxy {
  rpc CreateWallet(polygon.CreateWalletInput) returns (polygon.CreateWalletOutput);
  rpc GetBalance(polygon.GetBalanceInput) returns (polygon.GetBalanceOutput);
  rpc GetReceipt(polygon.GetReceiptInput) returns (polygon.GetReceiptOutput);
  rpc SendRawTransaction(polygon.SendRawTransactionInput) returns (polygon.SendRawTransactionOutput);
  rpc CreateRawTransaction(polygon.CreateRawTransactionInput) returns (polygon.CreateRawTransactionOutput);
  rpc GetBlockNumber(polygon.GetBlockNumberInput) returns (polygon.GetBlockNumberOutput);
  rpc GetBlocks(polygon.GetBlocksInput) returns (polygon.GetBlocksOutput);
}

service EthereumProxy {
  rpc CreateWallet(ethereum.CreateWalletInput) returns (ethereum.CreateWalletOutput);
  rpc GetReceipt(ethereum.GetReceiptInput) returns (ethereum.GetReceiptOutput);
  rpc GetBalance(ethereum.GetBalanceInput) returns (ethereum.GetBalanceOutput);
  rpc SendRawTransaction(ethereum.SendRawTransactionInput) returns (ethereum.SendRawTransactionOutput);
  rpc CreateRawTransaction(ethereum.CreateRawTransactionInput) returns (ethereum.CreateRawTransactionOutput);
  rpc GetBlockNumber(ethereum.GetBlockNumberInput) returns (ethereum.GetBlockNumberOutput);
  rpc GetBlocks(ethereum.GetBlocksInput) returns (ethereum.GetBlocksOutput);
}